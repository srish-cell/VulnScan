{
  "vulnerabilities": [
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "npmlog@4.1.2",
        "gauge@2.7.4",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "ansi-regex",
      "version": "2.1.1"
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "npmlog@4.1.2",
        "gauge@2.7.4",
        "string-width@1.0.2",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "ansi-regex",
      "version": "2.1.1"
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "npmlog@4.1.2",
        "gauge@2.7.4",
        "wide-align@1.1.3",
        "string-width@1.0.2",
        "strip-ansi@3.0.1",
        "ansi-regex@2.1.1"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "npmlog@4.1.2",
        "gauge@2.7.4",
        "wide-align@1.1.3",
        "string-width@2.1.0",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ansi-regex",
      "version": "2.1.1"
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "boxen@1.3.0",
        "string-width@2.1.1",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "boxen@1.3.0",
        "string-width@2.1.1",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ansi-regex",
      "version": "3.0.0"
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "boxen@1.3.0",
        "ansi-align@2.0.0",
        "string-width@2.1.1",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "boxen@1.3.0",
        "ansi-align@2.0.0",
        "string-width@2.1.1",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ansi-regex",
      "version": "3.0.0"
    },
    {
      "id": "SNYK-JS-ANSIREGEX-1583908",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          ">=2.1.1 <3.0.1",
          ">=4.0.0 <4.1.1",
          ">=5.0.0 <5.0.1",
          ">=6.0.0 <6.0.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.0.1",
        "4.1.1",
        "5.0.1",
        "6.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ansi-regex",
      "references": [
        {
          "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/chalk/ansi-regex/pull/37",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-18T11:04:40.935720Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T16:45:11.225574Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:38.334810Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
      "epssDetails": {
        "percentile": "0.65091",
        "probability": "0.00299",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-3807"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "ansi-regex",
      "proprietary": false,
      "creationTime": "2021-09-09T14:28:31.617043Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-09T14:27:43Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-12T12:52:37Z",
      "modificationTime": "2022-11-08T01:10:38.334810Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "boxen@1.3.0",
        "widest-line@2.0.1",
        "string-width@2.1.1",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "boxen@1.3.0",
        "widest-line@2.0.1",
        "string-width@2.1.1",
        "strip-ansi@4.0.0",
        "ansi-regex@3.0.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ansi-regex",
      "version": "3.0.0"
    },
    {
      "id": "SNYK-JS-BSON-561052",
      "title": "Internal Property Tampering",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:O/RC:C",
      "credit": [
        "xiaofen9"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <1.1.4"
        ]
      },
      "exploit": "Unproven",
      "fixedIn": [
        "1.1.4"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "bson",
      "references": [
        {
          "url": "https://github.com/mongodb/js-bson/commit/3809c1313a7b2a8001065f0271199df9fa3d16a8",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/mongodb/js-bson/releases/tag/v1.1.4",
          "title": "Release Note"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 5.4,
          "modificationTime": "2022-01-03T17:58:41.957465Z"
        }
      ],
      "description": "## Overview\n[bson](https://www.npmjs.com/package/bson) is a BSON Parser for node and browser.\n\nAffected versions of this package are vulnerable to Internal Property Tampering. The package will ignore an unknown value for an object's `_bsotype`, leading to cases where an object is serialized as a document rather than the intended BSON type.\n## Remediation\nUpgrade `bson` to version 1.1.4 or higher.\n## References\n- [GitHub Commit](https://github.com/mongodb/js-bson/commit/3809c1313a7b2a8001065f0271199df9fa3d16a8)\n- [Release Note](https://github.com/mongodb/js-bson/releases/tag/v1.1.4)\n",
      "epssDetails": {
        "percentile": "0.20520",
        "probability": "0.00054",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-2391",
          "CVE-2020-7610"
        ],
        "CWE": [
          "CWE-642"
        ],
        "GHSA": [
          "GHSA-v8w9-2789-6hhr"
        ]
      },
      "packageName": "bson",
      "proprietary": true,
      "creationTime": "2020-03-24T15:37:36.850403Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-03-24T15:35:27Z",
      "packageManager": "npm",
      "publicationTime": "2020-03-24T17:18:18Z",
      "modificationTime": "2022-01-03T17:58:41.957465Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "mongodb@3.0.5",
        "mongodb-core@3.0.5",
        "bson@1.0.6"
      ],
      "upgradePath": [
        false,
        "mongodb@3.1.3",
        "mongodb-core@3.1.2",
        "bson@1.1.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "bson",
      "version": "1.0.6"
    },
    {
      "id": "SNYK-JS-BSON-561052",
      "title": "Internal Property Tampering",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:O/RC:C",
      "credit": [
        "xiaofen9"
      ],
      "semver": {
        "vulnerable": [
          ">=1.0.0 <1.1.4"
        ]
      },
      "exploit": "Unproven",
      "fixedIn": [
        "1.1.4"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "bson",
      "references": [
        {
          "url": "https://github.com/mongodb/js-bson/commit/3809c1313a7b2a8001065f0271199df9fa3d16a8",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/mongodb/js-bson/releases/tag/v1.1.4",
          "title": "Release Note"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 5.4,
          "modificationTime": "2022-01-03T17:58:41.957465Z"
        }
      ],
      "description": "## Overview\n[bson](https://www.npmjs.com/package/bson) is a BSON Parser for node and browser.\n\nAffected versions of this package are vulnerable to Internal Property Tampering. The package will ignore an unknown value for an object's `_bsotype`, leading to cases where an object is serialized as a document rather than the intended BSON type.\n## Remediation\nUpgrade `bson` to version 1.1.4 or higher.\n## References\n- [GitHub Commit](https://github.com/mongodb/js-bson/commit/3809c1313a7b2a8001065f0271199df9fa3d16a8)\n- [Release Note](https://github.com/mongodb/js-bson/releases/tag/v1.1.4)\n",
      "epssDetails": {
        "percentile": "0.20520",
        "probability": "0.00054",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-2391",
          "CVE-2020-7610"
        ],
        "CWE": [
          "CWE-642"
        ],
        "GHSA": [
          "GHSA-v8w9-2789-6hhr"
        ]
      },
      "packageName": "bson",
      "proprietary": true,
      "creationTime": "2020-03-24T15:37:36.850403Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-03-24T15:35:27Z",
      "packageManager": "npm",
      "publicationTime": "2020-03-24T17:18:18Z",
      "modificationTime": "2022-01-03T17:58:41.957465Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "monk@6.0.5",
        "mongodb@2.2.35",
        "mongodb-core@2.1.19",
        "bson@1.0.6"
      ],
      "upgradePath": [
        false,
        "monk@7.0.0",
        "mongodb@3.2.3",
        "mongodb-core@3.2.3",
        "bson@1.1.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "bson",
      "version": "1.0.6"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "KatsuragiCSL"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "decode-uri-component",
      "references": [
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/sindresorhus/query-string/issues/345",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-02-17T14:05:51.889878Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-02T01:11:11.714842Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
      "epssDetails": {
        "percentile": "0.17338",
        "probability": "0.00050",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-38900"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "decode-uri-component",
      "proprietary": false,
      "creationTime": "2022-11-28T14:24:36.010219Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-28T14:06:23Z",
      "packageManager": "npm",
      "publicationTime": "2022-11-28T16:12:34.614831Z",
      "modificationTime": "2023-03-16T12:52:48.280507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "source-map-resolve@0.5.2",
        "decode-uri-component@0.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "decode-uri-component",
      "version": "0.2.0"
    },
    {
      "id": "SNYK-JS-DOTPROP-543489",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
      "credit": [
        "aaron_costello"
      ],
      "semver": {
        "vulnerable": [
          ">1.0.1 <4.2.1",
          ">=5.0.0 <5.1.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.2.1",
        "5.1.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [
        {
          "version": [
            ">1.0.1 <5.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports.set"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "dot-prop",
      "references": [
        {
          "url": "https://github.com/sindresorhus/dot-prop/commit/3039c8c07f6fdaa8b595ec869ae0895686a7a0f2",
          "title": "GitHub Commit"
        },
        {
          "url": "https://hackerone.com/reports/719856",
          "title": "HackerOne Report"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2022-09-01T21:49:01.095389Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2022-08-06T01:11:14.209198Z"
        }
      ],
      "description": "## Overview\n[dot-prop](https://github.com/sindresorhus/dot-prop#readme) is a package to get, set, or delete a property from a nested object using a dot path.\n\nAffected versions of this package are vulnerable to Prototype Pollution. It is possible for a user to modify the prototype of a base object.\r\n\r\n## PoC by aaron_costello \r\n```\r\nvar dotProp = require(\"dot-prop\")\r\nconst object = {};\r\nconsole.log(\"Before \" + object.b); //Undefined\r\ndotProp.set(object, '__proto__.b', true);\r\nconsole.log(\"After \" + {}.b); //true\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `dot-prop` to version 4.2.1, 5.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/dot-prop/commit/3039c8c07f6fdaa8b595ec869ae0895686a7a0f2)\n- [HackerOne Report](https://hackerone.com/reports/719856)\n",
      "epssDetails": {
        "percentile": "0.54383",
        "probability": "0.00183",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-8116"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "GHSA": [
          "GHSA-ff7x-qrg7-qggm"
        ]
      },
      "packageName": "dot-prop",
      "proprietary": false,
      "creationTime": "2020-01-28T15:18:37.743372Z",
      "functions_new": [
        {
          "version": [
            ">1.0.1 <5.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.set"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-01-28T10:17:51Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-28T16:23:39Z",
      "modificationTime": "2022-09-01T21:49:01.095389Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "configstore@3.1.2",
        "dot-prop@4.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "configstore@3.1.2",
        "dot-prop@4.2.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "dot-prop",
      "version": "4.2.0"
    },
    {
      "id": "SNYK-JS-FSEVENTS-5487987",
      "title": "Exposure of Resource to Wrong Sphere",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:H",
      "credit": [
        "giraffesecurity.dev"
      ],
      "semver": {
        "vulnerable": [
          "<1.2.11"
        ]
      },
      "exploit": "High",
      "fixedIn": [
        "1.2.11"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "fsevents",
      "references": [
        {
          "url": "https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/fsevents/fsevents/issues/357",
          "title": "GitHub Issue"
        },
        {
          "url": "https://fsevents-binaries.s3-us-west-2.amazonaws.com/",
          "title": "Impacted S3 Bucket"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-10-17T01:10:49.793831Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Exposure of Resource to Wrong Sphere by loading a binary from an insecure hardcoded S3 bucket URL, which was demonstrated by an ethical hacker to be susceptible to takeover by malicious actors and used to conduct remote code execution. Loading the remote binary was [removed](https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058) in version `1.2.11` meaning this and later versions were not exposed to this attack vector.\r\n\r\nDuring the disclosure process Snyk confirmed with the security researcher that AWS had agreed to take ownership and block all access to the S3 bucket and as such it has mitigated the straightforward attack vector - this can be further confirmed by attempting to access the [bucket](https://fsevents-binaries.s3-us-west-2.amazonaws.com/) which returns a `AllAccessDisabled` error.\r\n\r\n**Note:** While the threat was thought to be fully mitigated by limiting access to the named bucket in April 2023, more recent research (August 2023) has shown that not all attack vectors were cut off by that effort so the possibility of an attack on the same affected versions still exists, by other means. With this in mind, we have raised the current impact ratings for this vulnerability to reflect the possibility of remote code execution. We strongly recommend not using an impacted version.\n## Remediation\nUpgrade `fsevents` to version 1.2.11 or higher.\n## References\n- [GitHub Commit](https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058)\n- [GitHub Issue](https://github.com/fsevents/fsevents/issues/357)\n- [Impacted S3 Bucket](https://fsevents-binaries.s3-us-west-2.amazonaws.com/)\n",
      "epssDetails": {
        "percentile": "0.08492",
        "probability": "0.00044",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-45311"
        ],
        "CWE": [
          "CWE-668"
        ]
      },
      "packageName": "fsevents",
      "proprietary": true,
      "creationTime": "2023-04-27T08:21:15.583576Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-04-27T08:21:12Z",
      "packageManager": "npm",
      "publicationTime": "2023-04-27T19:48:58.599193Z",
      "modificationTime": "2023-10-17T01:10:49.793831Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.11"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "fsevents",
      "version": "1.2.9"
    },
    {
      "id": "SNYK-JS-GLOBPARENT-1016905",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Yeting Li"
      ],
      "semver": {
        "vulnerable": [
          "<5.1.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "5.1.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "glob-parent",
      "references": [
        {
          "url": "https://github.com/gulpjs/glob-parent/pull/36",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/gulpjs/glob-parent/releases/tag/v5.1.2",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-03-30T01:11:04.666304Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T15:32:35.708444Z"
        }
      ],
      "description": "## Overview\n[glob-parent](https://www.npmjs.com/package/glob-parent) is a package that helps extracting the non-magic parent path from a glob string.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The `enclosure` regex used to check for strings ending in enclosure containing path separator.\r\n\r\n### PoC by Yeting Li\r\n```\r\nvar globParent = require(\"glob-parent\")\r\nfunction build_attack(n) {\r\nvar ret = \"{\"\r\nfor (var i = 0; i < n; i++) {\r\nret += \"/\"\r\n}\r\n\r\nreturn ret;\r\n}\r\n\r\nglobParent(build_attack(5000));\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `glob-parent` to version 5.1.2 or higher.\n## References\n- [GitHub PR](https://github.com/gulpjs/glob-parent/pull/36)\n- [GitHub Release](https://github.com/gulpjs/glob-parent/releases/tag/v5.1.2)\n",
      "epssDetails": {
        "percentile": "0.82180",
        "probability": "0.01070",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-28469"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-ww39-953v-wcq6"
        ]
      },
      "packageName": "glob-parent",
      "proprietary": true,
      "creationTime": "2020-10-09T09:34:22.716485Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-01-12T12:42:32Z",
      "packageManager": "npm",
      "publicationTime": "2021-01-12T15:00:42Z",
      "modificationTime": "2022-10-25T15:32:35.708444Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "glob-parent@3.1.0"
      ],
      "upgradePath": [
        false,
        "nodemon@2.0.0",
        "chokidar@3.2.2",
        "glob-parent@5.1.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "glob-parent",
      "version": "3.1.0"
    },
    {
      "id": "SNYK-JS-GOT-2932019",
      "title": "Open Redirect",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<11.8.5",
          ">=12.0.0 <12.1.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "11.8.5",
        "12.1.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "got",
      "references": [
        {
          "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
          "title": "GitHub Diff"
        },
        {
          "url": "https://github.com/sindresorhus/got/pull/2047",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-06-29T01:11:26.531842Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-11-19T20:57:05.871669Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Open Redirect due to missing verification of requested URLs. It allowed a victim to be redirected to a UNIX socket.\n## Remediation\nUpgrade `got` to version 11.8.5, 12.1.0 or higher.\n## References\n- [GitHub Diff](https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0)\n- [GitHub PR](https://github.com/sindresorhus/got/pull/2047)\n",
      "epssDetails": {
        "percentile": "0.22655",
        "probability": "0.00058",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-33987"
        ],
        "CWE": [
          "CWE-601"
        ]
      },
      "packageName": "got",
      "proprietary": false,
      "creationTime": "2022-06-19T09:23:24.210132Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-06-19T08:33:16Z",
      "packageManager": "npm",
      "publicationTime": "2022-06-19T15:33:44.269688Z",
      "modificationTime": "2022-11-19T20:57:05.871669Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "got@6.7.1"
      ],
      "upgradePath": [
        false,
        "nodemon@2.0.17",
        "update-notifier@6.0.0",
        "latest-version@6.0.0",
        "package-json@7.0.0",
        "got@11.8.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "got",
      "version": "6.7.1"
    },
    {
      "id": "SNYK-JS-INI-1048974",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
      "credit": [
        "Eugene Lim",
        "Government Technology Agency Cyber Security Group"
      ],
      "semver": {
        "vulnerable": [
          "<1.3.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "1.3.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ini",
      "references": [
        {
          "url": "https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7",
          "title": "Eugene Lim - Research Blog Post"
        },
        {
          "url": "https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-12-03T01:11:01.035564Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2022-10-27T14:23:39.509078Z"
        }
      ],
      "description": "## Overview\n[ini](https://www.npmjs.org/package/ini) is an An ini encoder/decoder for node\n\nAffected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\r\n\r\n## PoC by Eugene Lim\r\n\r\npayload.ini\r\n```\r\n[__proto__]\r\npolluted = \"polluted\"\r\n```\r\n\r\npoc.js:\r\n```\r\nvar fs = require('fs')\r\nvar ini = require('ini')\r\n\r\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\r\nconsole.log(parsed)\r\nconsole.log(parsed.__proto__)\r\nconsole.log(polluted)\r\n```\r\n\r\n```\r\n> node poc.js\r\n{}\r\n{ polluted: 'polluted' }\r\n{ polluted: 'polluted' }\r\npolluted\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `ini` to version 1.3.6 or higher.\n## References\n- [Eugene Lim - Research Blog Post](https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7)\n- [GitHub Commit](https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1)\n",
      "epssDetails": {
        "percentile": "0.69305",
        "probability": "0.00384",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7788"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "GHSA": [
          "GHSA-qqgx-2p2h-9c37"
        ]
      },
      "packageName": "ini",
      "proprietary": true,
      "creationTime": "2020-12-08T15:34:07.743781Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-12-08T13:02:04Z",
      "packageManager": "npm",
      "publicationTime": "2020-12-10T18:08:38Z",
      "modificationTime": "2022-12-03T01:11:01.035564Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "is-installed-globally@0.1.0",
        "global-dirs@0.1.1",
        "ini@1.3.5"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "is-installed-globally@0.1.0",
        "global-dirs@0.1.1",
        "ini@1.3.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ini",
      "version": "1.3.5"
    },
    {
      "id": "SNYK-JS-INI-1048974",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
      "credit": [
        "Eugene Lim",
        "Government Technology Agency Cyber Security Group"
      ],
      "semver": {
        "vulnerable": [
          "<1.3.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "1.3.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ini",
      "references": [
        {
          "url": "https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7",
          "title": "Eugene Lim - Research Blog Post"
        },
        {
          "url": "https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-12-03T01:11:01.035564Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2022-10-27T14:23:39.509078Z"
        }
      ],
      "description": "## Overview\n[ini](https://www.npmjs.org/package/ini) is an An ini encoder/decoder for node\n\nAffected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\r\n\r\n## PoC by Eugene Lim\r\n\r\npayload.ini\r\n```\r\n[__proto__]\r\npolluted = \"polluted\"\r\n```\r\n\r\npoc.js:\r\n```\r\nvar fs = require('fs')\r\nvar ini = require('ini')\r\n\r\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\r\nconsole.log(parsed)\r\nconsole.log(parsed.__proto__)\r\nconsole.log(polluted)\r\n```\r\n\r\n```\r\n> node poc.js\r\n{}\r\n{ polluted: 'polluted' }\r\n{ polluted: 'polluted' }\r\npolluted\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `ini` to version 1.3.6 or higher.\n## References\n- [Eugene Lim - Research Blog Post](https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7)\n- [GitHub Commit](https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1)\n",
      "epssDetails": {
        "percentile": "0.69305",
        "probability": "0.00384",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7788"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "GHSA": [
          "GHSA-qqgx-2p2h-9c37"
        ]
      },
      "packageName": "ini",
      "proprietary": true,
      "creationTime": "2020-12-08T15:34:07.743781Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-12-08T13:02:04Z",
      "packageManager": "npm",
      "publicationTime": "2020-12-10T18:08:38Z",
      "modificationTime": "2022-12-03T01:11:01.035564Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "rc@1.2.8",
        "ini@1.3.5"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "rc@1.2.8",
        "ini@1.3.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ini",
      "version": "1.3.5"
    },
    {
      "id": "SNYK-JS-INI-1048974",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
      "credit": [
        "Eugene Lim",
        "Government Technology Agency Cyber Security Group"
      ],
      "semver": {
        "vulnerable": [
          "<1.3.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "1.3.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ini",
      "references": [
        {
          "url": "https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7",
          "title": "Eugene Lim - Research Blog Post"
        },
        {
          "url": "https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-12-03T01:11:01.035564Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2022-10-27T14:23:39.509078Z"
        }
      ],
      "description": "## Overview\n[ini](https://www.npmjs.org/package/ini) is an An ini encoder/decoder for node\n\nAffected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\r\n\r\n## PoC by Eugene Lim\r\n\r\npayload.ini\r\n```\r\n[__proto__]\r\npolluted = \"polluted\"\r\n```\r\n\r\npoc.js:\r\n```\r\nvar fs = require('fs')\r\nvar ini = require('ini')\r\n\r\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\r\nconsole.log(parsed)\r\nconsole.log(parsed.__proto__)\r\nconsole.log(polluted)\r\n```\r\n\r\n```\r\n> node poc.js\r\n{}\r\n{ polluted: 'polluted' }\r\n{ polluted: 'polluted' }\r\npolluted\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `ini` to version 1.3.6 or higher.\n## References\n- [Eugene Lim - Research Blog Post](https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7)\n- [GitHub Commit](https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1)\n",
      "epssDetails": {
        "percentile": "0.69305",
        "probability": "0.00384",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7788"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "GHSA": [
          "GHSA-qqgx-2p2h-9c37"
        ]
      },
      "packageName": "ini",
      "proprietary": true,
      "creationTime": "2020-12-08T15:34:07.743781Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-12-08T13:02:04Z",
      "packageManager": "npm",
      "publicationTime": "2020-12-10T18:08:38Z",
      "modificationTime": "2022-12-03T01:11:01.035564Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-auth-token@3.4.0",
        "rc@1.2.8",
        "ini@1.3.5"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-auth-token@3.4.0",
        "rc@1.2.8",
        "ini@1.3.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ini",
      "version": "1.3.5"
    },
    {
      "id": "SNYK-JS-INI-1048974",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
      "credit": [
        "Eugene Lim",
        "Government Technology Agency Cyber Security Group"
      ],
      "semver": {
        "vulnerable": [
          "<1.3.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "1.3.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "ini",
      "references": [
        {
          "url": "https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7",
          "title": "Eugene Lim - Research Blog Post"
        },
        {
          "url": "https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-12-03T01:11:01.035564Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2022-10-27T14:23:39.509078Z"
        }
      ],
      "description": "## Overview\n[ini](https://www.npmjs.org/package/ini) is an An ini encoder/decoder for node\n\nAffected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\r\n\r\n## PoC by Eugene Lim\r\n\r\npayload.ini\r\n```\r\n[__proto__]\r\npolluted = \"polluted\"\r\n```\r\n\r\npoc.js:\r\n```\r\nvar fs = require('fs')\r\nvar ini = require('ini')\r\n\r\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\r\nconsole.log(parsed)\r\nconsole.log(parsed.__proto__)\r\nconsole.log(polluted)\r\n```\r\n\r\n```\r\n> node poc.js\r\n{}\r\n{ polluted: 'polluted' }\r\n{ polluted: 'polluted' }\r\npolluted\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `ini` to version 1.3.6 or higher.\n## References\n- [Eugene Lim - Research Blog Post](https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7)\n- [GitHub Commit](https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1)\n",
      "epssDetails": {
        "percentile": "0.69305",
        "probability": "0.00384",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7788"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "GHSA": [
          "GHSA-qqgx-2p2h-9c37"
        ]
      },
      "packageName": "ini",
      "proprietary": true,
      "creationTime": "2020-12-08T15:34:07.743781Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-12-08T13:02:04Z",
      "packageManager": "npm",
      "publicationTime": "2020-12-10T18:08:38Z",
      "modificationTime": "2022-12-03T01:11:01.035564Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-url@3.1.0",
        "rc@1.2.8",
        "ini@1.3.5"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-url@3.1.0",
        "rc@1.2.8",
        "ini@1.3.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "ini",
      "version": "1.3.5"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon-node@2.1.1",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "to-regex@3.0.2",
        "define-property@2.0.2",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-accessor-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-KINDOF-537849",
      "title": "Validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
      "credit": [
        "Feng Xiao"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "ctorName"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "kind-of",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/kind-of/issues/30",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/kind-of/pull/31",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:58:16.269822Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "modificationTime": "2022-09-13T18:26:44.905560Z"
        }
      ],
      "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
      "epssDetails": {
        "percentile": "0.37508",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-20149"
        ],
        "CWE": [
          "CWE-20"
        ],
        "NSP": [
          "1490"
        ],
        "GHSA": [
          "GHSA-6c8f-qphg-qjgp"
        ]
      },
      "packageName": "kind-of",
      "proprietary": false,
      "creationTime": "2019-12-16T14:21:14.675101Z",
      "functions_new": [
        {
          "version": [
            ">=6.0.0 <6.0.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "ctorName"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-16T14:31:14Z",
      "packageManager": "npm",
      "publicationTime": "2020-01-19T14:31:13Z",
      "modificationTime": "2022-09-13T18:26:44.905560Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "define-property@1.0.0",
        "is-descriptor@1.0.2",
        "is-data-descriptor@1.0.0",
        "kind-of@6.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "kind-of",
      "version": "6.0.2"
    },
    {
      "id": "SNYK-JS-MINIMATCH-3050818",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.0.5"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.0.5"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimatch",
      "references": [
        {
          "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-27T21:40:17.490683Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-20T01:10:31.056597Z"
        }
      ],
      "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
      "epssDetails": {
        "percentile": "0.17961",
        "probability": "0.00051",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-3517"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "minimatch",
      "proprietary": false,
      "creationTime": "2022-10-18T06:10:47.980262Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-18T06:00:25Z",
      "packageManager": "npm",
      "publicationTime": "2022-10-18T06:29:18.078950Z",
      "modificationTime": "2022-11-27T21:40:17.490683Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "minimatch@3.0.4"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "minimatch@3.0.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimatch",
      "version": "3.0.4"
    },
    {
      "id": "SNYK-JS-MINIMATCH-3050818",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.0.5"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.0.5"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimatch",
      "references": [
        {
          "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-27T21:40:17.490683Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-20T01:10:31.056597Z"
        }
      ],
      "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
      "epssDetails": {
        "percentile": "0.17961",
        "probability": "0.00051",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-3517"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "minimatch",
      "proprietary": false,
      "creationTime": "2022-10-18T06:10:47.980262Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-18T06:00:25Z",
      "packageManager": "npm",
      "publicationTime": "2022-10-18T06:29:18.078950Z",
      "modificationTime": "2022-11-27T21:40:17.490683Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "npm-packlist@1.4.1",
        "ignore-walk@3.0.1",
        "minimatch@3.0.4"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "npm-packlist@1.4.1",
        "ignore-walk@3.0.1",
        "minimatch@3.0.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimatch",
      "version": "3.0.4"
    },
    {
      "id": "SNYK-JS-MINIMATCH-3050818",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<3.0.5"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.0.5"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimatch",
      "references": [
        {
          "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-27T21:40:17.490683Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-20T01:10:31.056597Z"
        }
      ],
      "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
      "epssDetails": {
        "percentile": "0.17961",
        "probability": "0.00051",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-3517"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "minimatch",
      "proprietary": false,
      "creationTime": "2022-10-18T06:10:47.980262Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-10-18T06:00:25Z",
      "packageManager": "npm",
      "publicationTime": "2022-10-18T06:29:18.078950Z",
      "modificationTime": "2022-11-27T21:40:17.490683Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "rimraf@2.6.3",
        "glob@7.1.3",
        "minimatch@3.0.4"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "rimraf@2.6.3",
        "glob@7.1.3",
        "minimatch@3.0.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimatch",
      "version": "3.0.4"
    },
    {
      "id": "SNYK-JS-MINIMIST-2429795",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.4",
          ">=1.2.0 <1.2.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.4",
        "1.2.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-05-18T11:05:33.152638Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-04-13T01:10:15.021168Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-04-24T13:51:51.456864Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
      "epssDetails": {
        "percentile": "0.68723",
        "probability": "0.00370",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-44906"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "SNYK": [
          "SNYK-JS-MINIMIST-559764"
        ]
      },
      "packageName": "minimist",
      "proprietary": false,
      "creationTime": "2022-03-18T13:02:08.840039Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-03-18T12:24:05Z",
      "packageManager": "npm",
      "publicationTime": "2022-03-21T12:09:35Z",
      "modificationTime": "2023-04-24T13:51:51.456864Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "jade@1.11.0",
        "mkdirp@0.5.1",
        "minimist@0.0.8"
      ],
      "upgradePath": [
        false,
        "jade@1.11.0",
        "mkdirp@0.5.2",
        "minimist@1.2.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "0.0.8"
    },
    {
      "id": "SNYK-JS-MINIMIST-559764",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
      "credit": [
        "Snyk Security Team"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.1",
          ">=1.0.0 <1.2.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.1",
        "1.2.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.6,
      "functions": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a",
          "title": "Command Injection PoC"
        },
        {
          "url": "https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94",
          "title": "GitHub Fix Commit #1"
        },
        {
          "url": "https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab",
          "title": "GitHub Fix Commit #2"
        },
        {
          "url": "https://snyk.io/blog/prototype-pollution-minimist/",
          "title": "Snyk Research Blog"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-03T23:19:09.248741Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-09-01T16:53:55.159376Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-04-23T01:11:18.536458Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` or `__proto__` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nrequire('minimist')('--__proto__.injected0 value0'.split(' '));\r\nconsole.log(({}).injected0 === 'value0'); // true\r\n\r\nrequire('minimist')('--constructor.prototype.injected1 value1'.split(' '));\r\nconsole.log(({}).injected1 === 'value1'); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.1, 1.2.3 or higher.\n## References\n- [Command Injection PoC](https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a)\n- [GitHub Fix Commit #1](https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)\n- [GitHub Fix Commit #2](https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)\n- [Snyk Research Blog](https://snyk.io/blog/prototype-pollution-minimist/)\n",
      "epssDetails": {
        "percentile": "0.41634",
        "probability": "0.00105",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7598"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "NSP": [
          "1179"
        ],
        "GHSA": [
          "GHSA-vh95-rmgr-6w4m"
        ]
      },
      "packageName": "minimist",
      "proprietary": true,
      "creationTime": "2020-03-11T08:25:47.093051Z",
      "functions_new": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-03-10T08:22:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-03-11T08:22:19Z",
      "modificationTime": "2022-09-01T16:53:55.159376Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "jade@1.11.0",
        "mkdirp@0.5.1",
        "minimist@0.0.8"
      ],
      "upgradePath": [
        false,
        "jade@1.11.0",
        "mkdirp@0.5.2",
        "minimist@1.2.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "0.0.8"
    },
    {
      "id": "SNYK-JS-MINIMIST-2429795",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.4",
          ">=1.2.0 <1.2.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.4",
        "1.2.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-05-18T11:05:33.152638Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-04-13T01:10:15.021168Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-04-24T13:51:51.456864Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
      "epssDetails": {
        "percentile": "0.68723",
        "probability": "0.00370",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-44906"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "SNYK": [
          "SNYK-JS-MINIMIST-559764"
        ]
      },
      "packageName": "minimist",
      "proprietary": false,
      "creationTime": "2022-03-18T13:02:08.840039Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-03-18T12:24:05Z",
      "packageManager": "npm",
      "publicationTime": "2022-03-21T12:09:35Z",
      "modificationTime": "2023-04-24T13:51:51.456864Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "mkdirp@0.5.1",
        "minimist@0.0.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "mkdirp@0.5.2",
        "minimist@1.2.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "0.0.8"
    },
    {
      "id": "SNYK-JS-MINIMIST-559764",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
      "credit": [
        "Snyk Security Team"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.1",
          ">=1.0.0 <1.2.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.1",
        "1.2.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.6,
      "functions": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a",
          "title": "Command Injection PoC"
        },
        {
          "url": "https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94",
          "title": "GitHub Fix Commit #1"
        },
        {
          "url": "https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab",
          "title": "GitHub Fix Commit #2"
        },
        {
          "url": "https://snyk.io/blog/prototype-pollution-minimist/",
          "title": "Snyk Research Blog"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-03T23:19:09.248741Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-09-01T16:53:55.159376Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-04-23T01:11:18.536458Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` or `__proto__` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nrequire('minimist')('--__proto__.injected0 value0'.split(' '));\r\nconsole.log(({}).injected0 === 'value0'); // true\r\n\r\nrequire('minimist')('--constructor.prototype.injected1 value1'.split(' '));\r\nconsole.log(({}).injected1 === 'value1'); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.1, 1.2.3 or higher.\n## References\n- [Command Injection PoC](https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a)\n- [GitHub Fix Commit #1](https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)\n- [GitHub Fix Commit #2](https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)\n- [Snyk Research Blog](https://snyk.io/blog/prototype-pollution-minimist/)\n",
      "epssDetails": {
        "percentile": "0.41634",
        "probability": "0.00105",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7598"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "NSP": [
          "1179"
        ],
        "GHSA": [
          "GHSA-vh95-rmgr-6w4m"
        ]
      },
      "packageName": "minimist",
      "proprietary": true,
      "creationTime": "2020-03-11T08:25:47.093051Z",
      "functions_new": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-03-10T08:22:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-03-11T08:22:19Z",
      "modificationTime": "2022-09-01T16:53:55.159376Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "mkdirp@0.5.1",
        "minimist@0.0.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "mkdirp@0.5.2",
        "minimist@1.2.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "0.0.8"
    },
    {
      "id": "SNYK-JS-MINIMIST-2429795",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.4",
          ">=1.2.0 <1.2.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.4",
        "1.2.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-05-18T11:05:33.152638Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-04-13T01:10:15.021168Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-04-24T13:51:51.456864Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
      "epssDetails": {
        "percentile": "0.68723",
        "probability": "0.00370",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-44906"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "SNYK": [
          "SNYK-JS-MINIMIST-559764"
        ]
      },
      "packageName": "minimist",
      "proprietary": false,
      "creationTime": "2022-03-18T13:02:08.840039Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-03-18T12:24:05Z",
      "packageManager": "npm",
      "publicationTime": "2022-03-21T12:09:35Z",
      "modificationTime": "2023-04-24T13:51:51.456864Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8",
        "mkdirp@0.5.1",
        "minimist@0.0.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8",
        "mkdirp@0.5.2",
        "minimist@1.2.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "0.0.8"
    },
    {
      "id": "SNYK-JS-MINIMIST-559764",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
      "credit": [
        "Snyk Security Team"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.1",
          ">=1.0.0 <1.2.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.1",
        "1.2.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.6,
      "functions": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a",
          "title": "Command Injection PoC"
        },
        {
          "url": "https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94",
          "title": "GitHub Fix Commit #1"
        },
        {
          "url": "https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab",
          "title": "GitHub Fix Commit #2"
        },
        {
          "url": "https://snyk.io/blog/prototype-pollution-minimist/",
          "title": "Snyk Research Blog"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-03T23:19:09.248741Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-09-01T16:53:55.159376Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-04-23T01:11:18.536458Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` or `__proto__` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nrequire('minimist')('--__proto__.injected0 value0'.split(' '));\r\nconsole.log(({}).injected0 === 'value0'); // true\r\n\r\nrequire('minimist')('--constructor.prototype.injected1 value1'.split(' '));\r\nconsole.log(({}).injected1 === 'value1'); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.1, 1.2.3 or higher.\n## References\n- [Command Injection PoC](https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a)\n- [GitHub Fix Commit #1](https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)\n- [GitHub Fix Commit #2](https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)\n- [Snyk Research Blog](https://snyk.io/blog/prototype-pollution-minimist/)\n",
      "epssDetails": {
        "percentile": "0.41634",
        "probability": "0.00105",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7598"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "NSP": [
          "1179"
        ],
        "GHSA": [
          "GHSA-vh95-rmgr-6w4m"
        ]
      },
      "packageName": "minimist",
      "proprietary": true,
      "creationTime": "2020-03-11T08:25:47.093051Z",
      "functions_new": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-03-10T08:22:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-03-11T08:22:19Z",
      "modificationTime": "2022-09-01T16:53:55.159376Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8",
        "mkdirp@0.5.1",
        "minimist@0.0.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8",
        "mkdirp@0.5.2",
        "minimist@1.2.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "0.0.8"
    },
    {
      "id": "SNYK-JS-MINIMIST-2429795",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.4",
          ">=1.2.0 <1.2.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.4",
        "1.2.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-05-18T11:05:33.152638Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-04-13T01:10:15.021168Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-04-24T13:51:51.456864Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
      "epssDetails": {
        "percentile": "0.68723",
        "probability": "0.00370",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-44906"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "SNYK": [
          "SNYK-JS-MINIMIST-559764"
        ]
      },
      "packageName": "minimist",
      "proprietary": false,
      "creationTime": "2022-03-18T13:02:08.840039Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-03-18T12:24:05Z",
      "packageManager": "npm",
      "publicationTime": "2022-03-21T12:09:35Z",
      "modificationTime": "2023-04-24T13:51:51.456864Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "rc@1.2.8",
        "minimist@1.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "rc@1.2.8",
        "minimist@1.2.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "1.2.0"
    },
    {
      "id": "SNYK-JS-MINIMIST-559764",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
      "credit": [
        "Snyk Security Team"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.1",
          ">=1.0.0 <1.2.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.1",
        "1.2.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.6,
      "functions": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a",
          "title": "Command Injection PoC"
        },
        {
          "url": "https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94",
          "title": "GitHub Fix Commit #1"
        },
        {
          "url": "https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab",
          "title": "GitHub Fix Commit #2"
        },
        {
          "url": "https://snyk.io/blog/prototype-pollution-minimist/",
          "title": "Snyk Research Blog"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-03T23:19:09.248741Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-09-01T16:53:55.159376Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-04-23T01:11:18.536458Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` or `__proto__` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nrequire('minimist')('--__proto__.injected0 value0'.split(' '));\r\nconsole.log(({}).injected0 === 'value0'); // true\r\n\r\nrequire('minimist')('--constructor.prototype.injected1 value1'.split(' '));\r\nconsole.log(({}).injected1 === 'value1'); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.1, 1.2.3 or higher.\n## References\n- [Command Injection PoC](https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a)\n- [GitHub Fix Commit #1](https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)\n- [GitHub Fix Commit #2](https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)\n- [Snyk Research Blog](https://snyk.io/blog/prototype-pollution-minimist/)\n",
      "epssDetails": {
        "percentile": "0.41634",
        "probability": "0.00105",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7598"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "NSP": [
          "1179"
        ],
        "GHSA": [
          "GHSA-vh95-rmgr-6w4m"
        ]
      },
      "packageName": "minimist",
      "proprietary": true,
      "creationTime": "2020-03-11T08:25:47.093051Z",
      "functions_new": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-03-10T08:22:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-03-11T08:22:19Z",
      "modificationTime": "2022-09-01T16:53:55.159376Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "rc@1.2.8",
        "minimist@1.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "rc@1.2.8",
        "minimist@1.2.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "1.2.0"
    },
    {
      "id": "SNYK-JS-MINIMIST-2429795",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.4",
          ">=1.2.0 <1.2.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.4",
        "1.2.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-05-18T11:05:33.152638Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-04-13T01:10:15.021168Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-04-24T13:51:51.456864Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
      "epssDetails": {
        "percentile": "0.68723",
        "probability": "0.00370",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-44906"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "SNYK": [
          "SNYK-JS-MINIMIST-559764"
        ]
      },
      "packageName": "minimist",
      "proprietary": false,
      "creationTime": "2022-03-18T13:02:08.840039Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-03-18T12:24:05Z",
      "packageManager": "npm",
      "publicationTime": "2022-03-21T12:09:35Z",
      "modificationTime": "2023-04-24T13:51:51.456864Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-auth-token@3.4.0",
        "rc@1.2.8",
        "minimist@1.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-auth-token@3.4.0",
        "rc@1.2.8",
        "minimist@1.2.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "1.2.0"
    },
    {
      "id": "SNYK-JS-MINIMIST-559764",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
      "credit": [
        "Snyk Security Team"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.1",
          ">=1.0.0 <1.2.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.1",
        "1.2.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.6,
      "functions": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a",
          "title": "Command Injection PoC"
        },
        {
          "url": "https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94",
          "title": "GitHub Fix Commit #1"
        },
        {
          "url": "https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab",
          "title": "GitHub Fix Commit #2"
        },
        {
          "url": "https://snyk.io/blog/prototype-pollution-minimist/",
          "title": "Snyk Research Blog"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-03T23:19:09.248741Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-09-01T16:53:55.159376Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-04-23T01:11:18.536458Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` or `__proto__` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nrequire('minimist')('--__proto__.injected0 value0'.split(' '));\r\nconsole.log(({}).injected0 === 'value0'); // true\r\n\r\nrequire('minimist')('--constructor.prototype.injected1 value1'.split(' '));\r\nconsole.log(({}).injected1 === 'value1'); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.1, 1.2.3 or higher.\n## References\n- [Command Injection PoC](https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a)\n- [GitHub Fix Commit #1](https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)\n- [GitHub Fix Commit #2](https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)\n- [Snyk Research Blog](https://snyk.io/blog/prototype-pollution-minimist/)\n",
      "epssDetails": {
        "percentile": "0.41634",
        "probability": "0.00105",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7598"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "NSP": [
          "1179"
        ],
        "GHSA": [
          "GHSA-vh95-rmgr-6w4m"
        ]
      },
      "packageName": "minimist",
      "proprietary": true,
      "creationTime": "2020-03-11T08:25:47.093051Z",
      "functions_new": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-03-10T08:22:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-03-11T08:22:19Z",
      "modificationTime": "2022-09-01T16:53:55.159376Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-auth-token@3.4.0",
        "rc@1.2.8",
        "minimist@1.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-auth-token@3.4.0",
        "rc@1.2.8",
        "minimist@1.2.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "1.2.0"
    },
    {
      "id": "SNYK-JS-MINIMIST-2429795",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.4",
          ">=1.2.0 <1.2.6"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.4",
        "1.2.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
          "title": "Fix Commit"
        },
        {
          "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-05-18T11:05:33.152638Z"
        },
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-04-13T01:10:15.021168Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2023-04-24T13:51:51.456864Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
      "epssDetails": {
        "percentile": "0.68723",
        "probability": "0.00370",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-44906"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "SNYK": [
          "SNYK-JS-MINIMIST-559764"
        ]
      },
      "packageName": "minimist",
      "proprietary": false,
      "creationTime": "2022-03-18T13:02:08.840039Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-03-18T12:24:05Z",
      "packageManager": "npm",
      "publicationTime": "2022-03-21T12:09:35Z",
      "modificationTime": "2023-04-24T13:51:51.456864Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-url@3.1.0",
        "rc@1.2.8",
        "minimist@1.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-url@3.1.0",
        "rc@1.2.8",
        "minimist@1.2.6"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "1.2.0"
    },
    {
      "id": "SNYK-JS-MINIMIST-559764",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
      "credit": [
        "Snyk Security Team"
      ],
      "semver": {
        "vulnerable": [
          "<0.2.1",
          ">=1.0.0 <1.2.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.2.1",
        "1.2.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.6,
      "functions": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "minimist",
      "references": [
        {
          "url": "https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a",
          "title": "Command Injection PoC"
        },
        {
          "url": "https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94",
          "title": "GitHub Fix Commit #1"
        },
        {
          "url": "https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab",
          "title": "GitHub Fix Commit #2"
        },
        {
          "url": "https://snyk.io/blog/prototype-pollution-minimist/",
          "title": "Snyk Research Blog"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-03T23:19:09.248741Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-09-01T16:53:55.159376Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5.6,
          "modificationTime": "2022-04-23T01:11:18.536458Z"
        }
      ],
      "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` or `__proto__` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nrequire('minimist')('--__proto__.injected0 value0'.split(' '));\r\nconsole.log(({}).injected0 === 'value0'); // true\r\n\r\nrequire('minimist')('--constructor.prototype.injected1 value1'.split(' '));\r\nconsole.log(({}).injected1 === 'value1'); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.1, 1.2.3 or higher.\n## References\n- [Command Injection PoC](https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a)\n- [GitHub Fix Commit #1](https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)\n- [GitHub Fix Commit #2](https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)\n- [Snyk Research Blog](https://snyk.io/blog/prototype-pollution-minimist/)\n",
      "epssDetails": {
        "percentile": "0.41634",
        "probability": "0.00105",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-7598"
        ],
        "CWE": [
          "CWE-1321"
        ],
        "NSP": [
          "1179"
        ],
        "GHSA": [
          "GHSA-vh95-rmgr-6w4m"
        ]
      },
      "packageName": "minimist",
      "proprietary": true,
      "creationTime": "2020-03-11T08:25:47.093051Z",
      "functions_new": [
        {
          "version": [
            "<0.2.1",
            ">=1.0.0 <1.1.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "setKey"
          }
        },
        {
          "version": [
            "<0.2.1",
            ">=1.1.1 <1.2.3"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.setKey"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-03-10T08:22:24Z",
      "packageManager": "npm",
      "publicationTime": "2020-03-11T08:22:19Z",
      "modificationTime": "2022-09-01T16:53:55.159376Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-url@3.1.0",
        "rc@1.2.8",
        "minimist@1.2.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "registry-url@3.1.0",
        "rc@1.2.8",
        "minimist@1.2.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "minimist",
      "version": "1.2.0"
    },
    {
      "id": "SNYK-JS-MONGODB-473855",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Behnaz Hassanshahi"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.13"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.1.13"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "mongodb",
      "references": [
        {
          "url": "https://www.npmjs.com/advisories/1203",
          "title": "NPM Security Advisory"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[mongodb](https://www.npmjs.com/package/mongodb) is an official MongoDB driver for Node.js.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `mongodb` to version 3.1.13 or higher.\n## References\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1203)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "1203"
        ],
        "GHSA": [
          "GHSA-mh5c-679w-hh4r"
        ]
      },
      "packageName": "mongodb",
      "proprietary": false,
      "creationTime": "2019-10-18T17:21:29.730576Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-10-04T18:34:48Z",
      "packageManager": "npm",
      "publicationTime": "2019-10-18T17:22:39Z",
      "modificationTime": "2020-12-22T17:02:14.405707Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "mongodb@3.0.5"
      ],
      "upgradePath": [
        false,
        "mongodb@3.1.13"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mongodb",
      "version": "3.0.5"
    },
    {
      "id": "SNYK-JS-MONGODB-473855",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Behnaz Hassanshahi"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.13"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.1.13"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "mongodb",
      "references": [
        {
          "url": "https://www.npmjs.com/advisories/1203",
          "title": "NPM Security Advisory"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[mongodb](https://www.npmjs.com/package/mongodb) is an official MongoDB driver for Node.js.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `mongodb` to version 3.1.13 or higher.\n## References\n- [NPM Security Advisory](https://www.npmjs.com/advisories/1203)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "1203"
        ],
        "GHSA": [
          "GHSA-mh5c-679w-hh4r"
        ]
      },
      "packageName": "mongodb",
      "proprietary": false,
      "creationTime": "2019-10-18T17:21:29.730576Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-10-04T18:34:48Z",
      "packageManager": "npm",
      "publicationTime": "2019-10-18T17:22:39Z",
      "modificationTime": "2020-12-22T17:02:14.405707Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "monk@6.0.5",
        "mongodb@2.2.35"
      ],
      "upgradePath": [
        false,
        "monk@7.0.0",
        "mongodb@3.2.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mongodb",
      "version": "2.2.35"
    },
    {
      "id": "SNYK-JS-MORGAN-72579",
      "title": "Arbitrary Code Injection",
      "CVSSv3": "CVSS:3.1/AV:A/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "<1.9.1"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "1.9.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.8,
      "functions": [
        {
          "version": [
            "<1.9.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "className": null,
            "functionName": "compile"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "morgan",
      "references": [
        {
          "url": "https://github.com/expressjs/morgan/commit/e329663836809de4be557b200a5b983ab8b4e6c2",
          "title": "GitHub Commit"
        },
        {
          "url": "https://hackerone.com/reports/390881",
          "title": "HackerOne Report"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T17:59:48.563008Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 5,
          "modificationTime": "2023-03-27T02:33:26.887658Z"
        }
      ],
      "description": "## Overview\n[morgan](https://www.npmjs.com/package/morgan) is a HTTP request logger middleware for node.js.\n\nAffected versions of this package are vulnerable to Arbitrary Code Injection. An attacker could use the format parameter to inject arbitrary commands.\n## Remediation\nUpgrade `morgan` to version 1.9.1 or higher.\n## References\n- [GitHub Commit](https://github.com/expressjs/morgan/commit/e329663836809de4be557b200a5b983ab8b4e6c2)\n- [HackerOne Report](https://hackerone.com/reports/390881)\n",
      "epssDetails": {
        "percentile": "0.79485",
        "probability": "0.00819",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-5413"
        ],
        "CWE": [
          "CWE-94"
        ],
        "GHSA": [
          "GHSA-gwg9-rgvj-4h5j"
        ]
      },
      "packageName": "morgan",
      "proprietary": false,
      "creationTime": "2018-11-11T12:38:44.575882Z",
      "functions_new": [
        {
          "version": [
            "<1.9.1"
          ],
          "functionId": {
            "filePath": "index.js",
            "functionName": "compile"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2018-11-09T12:12:59Z",
      "packageManager": "npm",
      "publicationTime": "2018-11-12T17:29:35Z",
      "modificationTime": "2023-03-27T02:33:26.887658Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "morgan@1.9.0"
      ],
      "upgradePath": [
        false,
        "morgan@1.9.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "morgan",
      "version": "1.9.0"
    },
    {
      "id": "SNYK-JS-QS-3153490",
      "title": "Prototype Poisoning",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "BRAUN Nathanael",
        "BRISSAUD Johan"
      ],
      "semver": {
        "vulnerable": [
          "<6.2.4",
          ">=6.3.0 <6.3.3",
          ">=6.4.0 <6.4.1",
          ">=6.5.0 <6.5.3",
          ">=6.6.0 <6.6.1",
          ">=6.7.0 <6.7.3",
          ">=6.8.0 <6.8.3",
          ">=6.9.0 <6.9.7",
          ">=6.10.0 <6.10.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.2.4",
        "6.3.3",
        "6.4.1",
        "6.5.3",
        "6.6.1",
        "6.7.3",
        "6.8.3",
        "6.9.7",
        "6.10.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "qs",
      "references": [
        {
          "url": "https://github.com/ljharb/qs/pull/428",
          "title": "GitHub PR"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2150323",
          "title": "RedHat Bugzilla Bug"
        },
        {
          "url": "https://github.com/n8tz/CVE-2022-24999",
          "title": "Researcher Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-29T01:11:13.913238Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-03T13:46:25.900727Z"
        }
      ],
      "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Prototype Poisoning which allows attackers to cause a Node process to hang, processing an Array object whose prototype has been replaced by one with an excessive length value.\r\n\r\n**Note:** In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `qs` to version 6.2.4, 6.3.3, 6.4.1, 6.5.3, 6.6.1, 6.7.3, 6.8.3, 6.9.7, 6.10.3 or higher.\n## References\n- [GitHub PR](https://github.com/ljharb/qs/pull/428)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2150323)\n- [Researcher Advisory](https://github.com/n8tz/CVE-2022-24999)\n",
      "epssDetails": {
        "percentile": "0.58377",
        "probability": "0.00215",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-24999"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "qs",
      "proprietary": false,
      "creationTime": "2022-12-04T11:01:47.782869Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-26T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2022-12-04T12:24:32.307833Z",
      "modificationTime": "2022-12-06T09:33:17.364321Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "express@4.16.3",
        "qs@6.5.1"
      ],
      "upgradePath": [
        false,
        "express@4.17.3",
        "qs@6.9.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "qs",
      "version": "6.5.1"
    },
    {
      "id": "SNYK-JS-QS-3153490",
      "title": "Prototype Poisoning",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "BRAUN Nathanael",
        "BRISSAUD Johan"
      ],
      "semver": {
        "vulnerable": [
          "<6.2.4",
          ">=6.3.0 <6.3.3",
          ">=6.4.0 <6.4.1",
          ">=6.5.0 <6.5.3",
          ">=6.6.0 <6.6.1",
          ">=6.7.0 <6.7.3",
          ">=6.8.0 <6.8.3",
          ">=6.9.0 <6.9.7",
          ">=6.10.0 <6.10.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "6.2.4",
        "6.3.3",
        "6.4.1",
        "6.5.3",
        "6.6.1",
        "6.7.3",
        "6.8.3",
        "6.9.7",
        "6.10.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "qs",
      "references": [
        {
          "url": "https://github.com/ljharb/qs/pull/428",
          "title": "GitHub PR"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2150323",
          "title": "RedHat Bugzilla Bug"
        },
        {
          "url": "https://github.com/n8tz/CVE-2022-24999",
          "title": "Researcher Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-29T01:11:13.913238Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-12-03T13:46:25.900727Z"
        }
      ],
      "description": "## Overview\n[qs](https://www.npmjs.com/package/qs) is a querystring parser that supports nesting and arrays, with a depth limit.\n\nAffected versions of this package are vulnerable to Prototype Poisoning which allows attackers to cause a Node process to hang, processing an Array object whose prototype has been replaced by one with an excessive length value.\r\n\r\n**Note:** In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `qs` to version 6.2.4, 6.3.3, 6.4.1, 6.5.3, 6.6.1, 6.7.3, 6.8.3, 6.9.7, 6.10.3 or higher.\n## References\n- [GitHub PR](https://github.com/ljharb/qs/pull/428)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2150323)\n- [Researcher Advisory](https://github.com/n8tz/CVE-2022-24999)\n",
      "epssDetails": {
        "percentile": "0.58377",
        "probability": "0.00215",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-24999"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "qs",
      "proprietary": false,
      "creationTime": "2022-12-04T11:01:47.782869Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-11-26T00:00:00Z",
      "packageManager": "npm",
      "publicationTime": "2022-12-04T12:24:32.307833Z",
      "modificationTime": "2022-12-06T09:33:17.364321Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "express@4.16.3",
        "body-parser@1.18.2",
        "qs@6.5.1"
      ],
      "upgradePath": [
        false,
        "express@4.17.3",
        "body-parser@1.19.2",
        "qs@6.9.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "qs",
      "version": "6.5.1"
    },
    {
      "id": "SNYK-JS-SEMVER-3247795",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Alessio Della Libera - Snyk Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<5.7.2",
          ">=6.0.0 <6.3.1",
          ">=7.0.0 <7.5.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "5.7.2",
        "6.3.1",
        "7.5.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver",
      "references": [
        {
          "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/pull/564",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-06T01:12:12.552518Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-13T13:32:48.730054Z"
        }
      ],
      "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
      "epssDetails": {
        "percentile": "0.38160",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25883"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver",
      "proprietary": true,
      "creationTime": "2023-01-25T16:16:50.073158Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-25T16:00:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-20T15:39:58.313421Z",
      "modificationTime": "2023-07-13T13:32:48.730054Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "mongodb@3.0.5",
        "mongodb-core@3.0.5",
        "require_optional@1.0.1",
        "semver@5.5.0"
      ],
      "upgradePath": [
        false,
        "mongodb@3.0.5",
        "mongodb-core@3.0.5",
        "require_optional@1.0.1",
        "semver@5.7.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "semver",
      "version": "5.5.0"
    },
    {
      "id": "SNYK-JS-SEMVER-3247795",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Alessio Della Libera - Snyk Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<5.7.2",
          ">=6.0.0 <6.3.1",
          ">=7.0.0 <7.5.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "5.7.2",
        "6.3.1",
        "7.5.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver",
      "references": [
        {
          "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/pull/564",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-06T01:12:12.552518Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-13T13:32:48.730054Z"
        }
      ],
      "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
      "epssDetails": {
        "percentile": "0.38160",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25883"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver",
      "proprietary": true,
      "creationTime": "2023-01-25T16:16:50.073158Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-25T16:00:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-20T15:39:58.313421Z",
      "modificationTime": "2023-07-13T13:32:48.730054Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "semver-diff@2.1.0",
        "semver@5.5.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "semver-diff@2.1.0",
        "semver@5.7.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "semver",
      "version": "5.5.0"
    },
    {
      "id": "SNYK-JS-SEMVER-3247795",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Alessio Della Libera - Snyk Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<5.7.2",
          ">=6.0.0 <6.3.1",
          ">=7.0.0 <7.5.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "5.7.2",
        "6.3.1",
        "7.5.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver",
      "references": [
        {
          "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/pull/564",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-06T01:12:12.552518Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-13T13:32:48.730054Z"
        }
      ],
      "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
      "epssDetails": {
        "percentile": "0.38160",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25883"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver",
      "proprietary": true,
      "creationTime": "2023-01-25T16:16:50.073158Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-25T16:00:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-20T15:39:58.313421Z",
      "modificationTime": "2023-07-13T13:32:48.730054Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "monk@6.0.5",
        "mongodb@2.2.35",
        "mongodb-core@2.1.19",
        "require_optional@1.0.1",
        "semver@5.5.0"
      ],
      "upgradePath": [
        false,
        "monk@6.0.5",
        "mongodb@2.2.35",
        "mongodb-core@2.1.19",
        "require_optional@1.0.1",
        "semver@5.7.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "semver",
      "version": "5.5.0"
    },
    {
      "id": "SNYK-JS-SEMVER-3247795",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Alessio Della Libera - Snyk Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<5.7.2",
          ">=6.0.0 <6.3.1",
          ">=7.0.0 <7.5.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "5.7.2",
        "6.3.1",
        "7.5.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver",
      "references": [
        {
          "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/pull/564",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-06T01:12:12.552518Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-13T13:32:48.730054Z"
        }
      ],
      "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
      "epssDetails": {
        "percentile": "0.38160",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25883"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver",
      "proprietary": true,
      "creationTime": "2023-01-25T16:16:50.073158Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-25T16:00:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-20T15:39:58.313421Z",
      "modificationTime": "2023-07-13T13:32:48.730054Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "semver@5.5.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "update-notifier@2.5.0",
        "latest-version@3.1.0",
        "package-json@4.0.1",
        "semver@5.7.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "semver",
      "version": "5.5.0"
    },
    {
      "id": "SNYK-JS-SEMVER-3247795",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Alessio Della Libera - Snyk Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<5.7.2",
          ">=6.0.0 <6.3.1",
          ">=7.0.0 <7.5.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "5.7.2",
        "6.3.1",
        "7.5.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver",
      "references": [
        {
          "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/pull/564",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-06T01:12:12.552518Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-13T13:32:48.730054Z"
        }
      ],
      "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
      "epssDetails": {
        "percentile": "0.38160",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25883"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver",
      "proprietary": true,
      "creationTime": "2023-01-25T16:16:50.073158Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-25T16:00:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-20T15:39:58.313421Z",
      "modificationTime": "2023-07-13T13:32:48.730054Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "semver@5.7.0"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "semver@5.7.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "semver",
      "version": "5.7.0"
    },
    {
      "id": "SNYK-JS-SEMVER-3247795",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Alessio Della Libera - Snyk Research Team"
      ],
      "semver": {
        "vulnerable": [
          "<5.7.2",
          ">=6.0.0 <6.3.1",
          ">=7.0.0 <7.5.2"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "5.7.2",
        "6.3.1",
        "7.5.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "semver",
      "references": [
        {
          "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-semver/pull/564",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
          "title": "Vulnerable Code"
        },
        {
          "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-06T01:12:12.552518Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-07-13T13:32:48.730054Z"
        }
      ],
      "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
      "epssDetails": {
        "percentile": "0.38160",
        "probability": "0.00091",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25883"
        ],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "semver",
      "proprietary": true,
      "creationTime": "2023-01-25T16:16:50.073158Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-01-25T16:00:59Z",
      "packageManager": "npm",
      "publicationTime": "2023-06-20T15:39:58.313421Z",
      "modificationTime": "2023-07-13T13:32:48.730054Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "semver@5.7.1"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "semver@5.7.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "semver",
      "version": "5.7.1"
    },
    {
      "id": "SNYK-JS-TAR-1536528",
      "title": "Arbitrary File Overwrite",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
      "credit": [
        "ginkoid",
        "chen-robert"
      ],
      "semver": {
        "vulnerable": [
          "<3.2.3",
          ">=4.0.0 <4.4.15",
          ">=5.0.0 <5.0.7",
          ">=6.0.0 <6.1.2"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.2.3",
        "4.4.15",
        "5.0.7",
        "6.1.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.2,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tar",
      "references": [
        {
          "url": "https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-07-03T01:10:57.821855Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-18T11:03:10.716138Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-11-27T21:12:46.430209Z"
        }
      ],
      "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. This is due to insufficient symlink protection.\r\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic is insufficient when extracting tar files that contain both a directory and a symlink with the same name as the directory. This order of operations results in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to `mkdir` for that directory are skipped.\r\nHowever, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it is possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location.\n## Remediation\nUpgrade `tar` to version 3.2.3, 4.4.15, 5.0.7, 6.1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20)\n",
      "epssDetails": {
        "percentile": "0.80342",
        "probability": "0.00889",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-32803"
        ],
        "CWE": [
          "CWE-22"
        ],
        "NSP": [
          "1771"
        ],
        "GHSA": [
          "GHSA-r628-mhmh-qjhw"
        ]
      },
      "packageName": "tar",
      "proprietary": false,
      "creationTime": "2021-08-04T06:32:44.747650Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-08-04T06:13:39Z",
      "packageManager": "npm",
      "publicationTime": "2021-08-04T07:24:54.942553Z",
      "modificationTime": "2022-11-27T21:12:46.430209Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.15"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "tar",
      "version": "4.4.8"
    },
    {
      "id": "SNYK-JS-TAR-1536531",
      "title": "Arbitrary File Overwrite",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
      "credit": [
        "ginkoid",
        "chen-robert"
      ],
      "semver": {
        "vulnerable": [
          "<3.2.2",
          ">=4.0.0 <4.4.14",
          ">=5.0.0 <5.0.6",
          ">=6.0.0 <6.1.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.2.2",
        "4.4.14",
        "5.0.6",
        "6.1.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.2,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tar",
      "references": [
        {
          "url": "https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-18T11:04:11.840455Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-04-26T01:10:35.141363Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-11-27T21:12:26.283913Z"
        }
      ],
      "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. This is due to insufficient absolute path sanitization.\r\n\r\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example, the path `/home/user/.bashrc` would turn into `home/user/.bashrc`.\r\n\r\nThis logic is insufficient when file paths contain repeated path roots such as `////home/user/.bashrc`. `node-tar` only strips a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) still resolves to an absolute path.\n## Remediation\nUpgrade `tar` to version 3.2.2, 4.4.14, 5.0.6, 6.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4)\n",
      "epssDetails": {
        "percentile": "0.85843",
        "probability": "0.01656",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-32804"
        ],
        "CWE": [
          "CWE-22"
        ],
        "NSP": [
          "1770"
        ],
        "GHSA": [
          "GHSA-3jfq-g458-7qm9"
        ]
      },
      "packageName": "tar",
      "proprietary": false,
      "creationTime": "2021-08-04T06:40:36.725155Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-08-04T06:33:52Z",
      "packageManager": "npm",
      "publicationTime": "2021-08-04T07:24:55.599985Z",
      "modificationTime": "2022-11-27T21:12:26.283913Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.14"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "tar",
      "version": "4.4.8"
    },
    {
      "id": "SNYK-JS-TAR-1536758",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:U/RL:O/RC:R",
      "credit": [
        "@isaacs"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.1.4",
          ">=5.0.0 <5.0.8",
          "<4.4.16"
        ]
      },
      "exploit": "Unproven",
      "fixedIn": [
        "6.1.4",
        "5.0.8",
        "4.4.16"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tar",
      "references": [
        {
          "url": "https://github.com/npm/node-tar/commit/06cbde5935aa7643f578f874de84a7da2a74fe3a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-tar/commit/adf35115dbc6e7a479fe3c38f859baf6ffff7a7a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/npm/node-tar/commit/d3d5a4e4560f18131e64fc62f5a281b238ef2ecf",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). When stripping the trailing slash from `files` arguments, the  `f.replace(/\\/+$/, '')` performance of this function can exponentially degrade when `f` contains many `/` characters resulting in ReDoS. \r\n\r\nThis vulnerability is not likely to be exploitable as it requires that the untrusted input is being passed into the `tar.extract()` or `tar.list()` array of entries to parse/extract, which would be unusual.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `tar` to version 6.1.4, 5.0.8, 4.4.16 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/06cbde5935aa7643f578f874de84a7da2a74fe3a)\n- [GitHub Commit](https://github.com/npm/node-tar/commit/adf35115dbc6e7a479fe3c38f859baf6ffff7a7a)\n- [GitHub Commit](https://github.com/npm/node-tar/commit/d3d5a4e4560f18131e64fc62f5a281b238ef2ecf)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "tar",
      "proprietary": false,
      "creationTime": "2021-08-05T12:41:27.304655Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-08-05T12:38:55Z",
      "packageManager": "npm",
      "publicationTime": "2021-08-05T14:33:10Z",
      "modificationTime": "2021-08-11T16:47:34.347918Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "tar",
      "version": "4.4.8"
    },
    {
      "id": "SNYK-JS-TAR-1579147",
      "title": "Arbitrary File Write",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
      "credit": [
        "ginkoid",
        "chen-robert"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.1.7",
          ">=5.0.0 <5.0.8",
          "<4.4.16"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "6.1.7",
        "5.0.8",
        "4.4.16"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tar",
      "references": [
        {
          "url": "https://github.com/npm/node-tar/commit/53602669f58ddbeb3294d7196b3320aaaed22728",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.6,
          "modificationTime": "2022-04-26T01:10:35.689720Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-03T21:17:39.668619Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-09-13T21:08:20.388255Z"
        }
      ],
      "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic was insufficient when extracting `tar` files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators. However, `\\` is a valid filename character on posix systems.\r\n\r\nBy first creating a directory, and then replacing that directory with a symlink, it is possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted `tar` file to symlink into an arbitrary location. This can lead to extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\r\n\r\nAdditionally, a similar confusion could arise on case-insensitive filesystems. If a `tar` archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but not from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created.\n## Remediation\nUpgrade `tar` to version 6.1.7, 5.0.8, 4.4.16 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/53602669f58ddbeb3294d7196b3320aaaed22728)\n",
      "epssDetails": {
        "percentile": "0.43105",
        "probability": "0.00110",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-37701"
        ],
        "CWE": [
          "CWE-22"
        ],
        "NSP": [
          "1779"
        ],
        "GHSA": [
          "GHSA-9r2w-394v-53qc"
        ]
      },
      "packageName": "tar",
      "proprietary": false,
      "creationTime": "2021-09-01T05:55:13.724747Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-01T05:45:02Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-01T07:55:13.009873Z",
      "modificationTime": "2022-09-13T21:08:20.388255Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "tar",
      "version": "4.4.8"
    },
    {
      "id": "SNYK-JS-TAR-1579152",
      "title": "Arbitrary File Write",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
      "credit": [
        "ginkoid",
        "chen-robert",
        "JarLob"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.1.9",
          ">=5.0.0 <5.0.10",
          "<4.4.18"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "6.1.9",
        "5.0.10",
        "4.4.18"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tar",
      "references": [
        {
          "url": "https://github.com/npm/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.6,
          "modificationTime": "2022-04-26T01:10:35.782070Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-03T21:18:09.683772Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-09-13T18:47:58.237883Z"
        }
      ],
      "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic is insufficient when extracting `tar` files that contain two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts.\r\nA specially crafted `tar` archive can include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. This leads to bypassing `node-tar` symlink checks on directories, essentially allowing an untrusted `tar` file to symlink into an arbitrary location and extracting arbitrary files into that location.\n## Remediation\nUpgrade `tar` to version 6.1.9, 5.0.10, 4.4.18 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455)\n",
      "epssDetails": {
        "percentile": "0.43105",
        "probability": "0.00110",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-37712"
        ],
        "CWE": [
          "CWE-22"
        ],
        "NSP": [
          "1780"
        ],
        "GHSA": [
          "GHSA-qq89-hq3f-393p"
        ]
      },
      "packageName": "tar",
      "proprietary": false,
      "creationTime": "2021-09-01T06:04:41.432860Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-01T05:57:49Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-01T07:55:12.359155Z",
      "modificationTime": "2022-09-13T18:47:58.237883Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "tar",
      "version": "4.4.8"
    },
    {
      "id": "SNYK-JS-TAR-1579155",
      "title": "Arbitrary File Write",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
      "credit": [
        "ginkoid",
        "chen-robert",
        "JarLob"
      ],
      "semver": {
        "vulnerable": [
          ">=6.0.0 <6.1.9",
          ">=5.0.0 <5.0.10",
          "<4.4.18"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "6.1.9",
        "5.0.10",
        "4.4.18"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": "This vulnerability is only applicable on Windows operating system"
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "tar",
      "references": [
        {
          "url": "https://github.com/npm/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
          "cvssV3BaseScore": 8.2,
          "modificationTime": "2022-05-03T21:18:12.740276Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.6,
          "modificationTime": "2022-04-26T01:10:36.631320Z"
        }
      ],
      "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\r\n\r\nThis logic is insufficient on Windows systems when extracting `tar` files that contain a path that is not an absolute path, but specify a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` resolves against the current working directory on the `C:` drive, rather than the extraction target directory.\r\n\r\nAdditionally, a `..` portion of the path can occur immediately after the drive letter, such as `C:../foo`, and is not properly sanitized by the logic that checks for `..` within the normalized and split portions of the path.\r\n\r\n**Note:** This only affects users of `node-tar` on Windows systems.\n## Remediation\nUpgrade `tar` to version 6.1.9, 5.0.10, 4.4.18 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598)\n",
      "epssDetails": {
        "percentile": "0.23142",
        "probability": "0.00059",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-37713"
        ],
        "CWE": [
          "CWE-22"
        ],
        "NSP": [
          "1781"
        ],
        "GHSA": [
          "GHSA-5955-9wpr-37jh"
        ]
      },
      "packageName": "tar",
      "proprietary": false,
      "creationTime": "2021-09-01T06:09:32.775270Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-01T06:05:10Z",
      "packageManager": "npm",
      "publicationTime": "2021-09-01T07:55:11.707292Z",
      "modificationTime": "2022-06-23T09:38:04.790680Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.8"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "fsevents@1.2.9",
        "node-pre-gyp@0.12.0",
        "tar@4.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "tar",
      "version": "4.4.8"
    },
    {
      "id": "SNYK-JS-UGLIFYJS-1727251",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "ready-research"
      ],
      "semver": {
        "vulnerable": [
          "<3.14.3"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.14.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "uglify-js",
      "references": [
        {
          "url": "https://github.com/mishoo/UglifyJS/commit/157521066fc43cff2feab7ffc1ecea603617606b",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/mishoo/UglifyJS/issues/5133",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/mishoo/UglifyJS/pull/5134",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/mishoo/UglifyJS/pull/5135",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[uglify-js](http://npmjs.com/package/uglify-js) is a JavaScript parser, minifier, compressor and beautifier toolkit.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `string_template` and the `decode_template` functions.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `uglify-js` to version 3.14.3 or higher.\n## References\n- [GitHub Commit](https://github.com/mishoo/UglifyJS/commit/157521066fc43cff2feab7ffc1ecea603617606b)\n- [GitHub Issue](https://github.com/mishoo/UglifyJS/issues/5133)\n- [GitHub PR](https://github.com/mishoo/UglifyJS/pull/5134)\n- [GitHub PR](https://github.com/mishoo/UglifyJS/pull/5135)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "uglify-js",
      "proprietary": false,
      "creationTime": "2021-09-30T14:25:50.130236Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-30T14:22:21Z",
      "packageManager": "npm",
      "publicationTime": "2021-11-09T18:42:15.313328Z",
      "modificationTime": "2021-11-09T18:42:15.332622Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "jade@1.11.0",
        "transformers@2.1.0",
        "uglify-js@2.2.5"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "uglify-js",
      "version": "2.2.5"
    },
    {
      "id": "npm:uglify-js:20150824",
      "title": "Improper minification of non-boolean comparisons",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L",
      "credit": [
        "Tom MacWright"
      ],
      "semver": {
        "vulnerable": [
          ">=2.2.0 <2.4.24"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.4.24"
      ],
      "patches": [
        {
          "id": "patch:npm:uglify-js:20150824:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20150824/uglify-js_20150824_0_0_905b6011784ca60d41919ac1a499962b7c1d4b02_snyk.patch"
          ],
          "version": "<= 2.4.23 >2.0.0",
          "comments": [],
          "modificationTime": "2019-12-03T11:40:45.756528Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 8.3,
      "functions": [
        {
          "version": [
            ">=2.2.0 <2.4.24"
          ],
          "functionId": {
            "filePath": "lib/compress.js",
            "className": null,
            "functionName": "Compressor"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "uglify-js",
      "references": [
        {
          "url": "https://zyan.scripts.mit.edu/blog/backdooring-js/",
          "title": "Blog Post"
        },
        {
          "url": "https://github.com/mishoo/UglifyJS2/issues/751",
          "title": "GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T17:48:01.009006Z"
        }
      ],
      "description": "## Overview\r\n[`uglify-js`](http://npmjs.com/package/uglify-js) is a JavaScript parser, minifier, compressor and beautifier toolkit.\r\n\r\n[Tom MacWright](https://github.com/mishoo/UglifyJS2/issues/751) discovered that UglifyJS versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted Javascript file to have altered functionality after minification. This bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [Yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\r\n\r\n### Details\r\nIn Boolean algebra, DeMorgan's laws describe the relationships between conjunctions (`&&`), disjunctions (`||`) and negations (`!`).\r\nIn Javascript form, they state that:\r\n```savascript\r\n !(a && b) === (!a) || (!b)\r\n !(a || b) === (!a) && (!b)\r\n```\r\n\r\nThe law does not hold true when one of the values is not a boolean however.\r\n\r\nVulnerable versions of UglifyJS do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\r\n\r\nConsider this authentication function:\r\n\r\n```javascript\r\nfunction isTokenValid(user) {\r\n    var timeLeft =\r\n        !!config && // config object exists\r\n        !!user.token && // user object has a token\r\n        !user.token.invalidated && // token is not explicitly invalidated\r\n        !config.uninitialized && // config is initialized\r\n        !config.ignoreTimestamps && // don't ignore timestamps\r\n        getTimeLeft(user.token.expiry); // > 0 if expiration is in the future\r\n\r\n    // The token must not be expired\r\n    return timeLeft > 0;\r\n}\r\n\r\nfunction getTimeLeft(expiry) {\r\n  return expiry - getSystemTime();\r\n}\r\n```\r\nWhen minified with a vulnerable version of UglifyJS, it will produce the following insecure output, where a token will never expire:\r\n\r\n( Formatted for readability )\r\n\r\n```javascript\r\nfunction isTokenValid(user) {\r\n    var timeLeft = !(                       // negation\r\n        !config                             // config object does not exist\r\n        || !user.token                      // user object does not have a token\r\n        || user.token.invalidated           // token is explicitly invalidated\r\n        || config.uninitialized             // config isn't initialized\r\n        || config.ignoreTimestamps          // ignore timestamps\r\n        || !getTimeLeft(user.token.expiry)  // > 0 if expiration is in the future\r\n    );\r\n    return timeLeft > 0\r\n}\r\n\r\nfunction getTimeLeft(expiry) {\r\n    return expiry - getSystemTime()\r\n}\r\n```\r\n\r\n## Remediation\r\nUpgrade UglifyJS to version `2.4.24` or higher.\r\n\r\n## References\r\n- [Blog Post](https://zyan.scripts.mit.edu/blog/backdooring-js/)\r\n- [GitHub Issue](https://github.com/mishoo/UglifyJS2/issues/751)",
      "epssDetails": {
        "percentile": "0.79197",
        "probability": "0.00794",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2015-8857"
        ],
        "CWE": [
          "CWE-95"
        ],
        "NSP": [
          "39"
        ],
        "GHSA": [
          "GHSA-34r7-q49f-h37c"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-UGLIFYJS-10041"
        ]
      },
      "packageName": "uglify-js",
      "proprietary": false,
      "creationTime": "2015-08-24T09:29:10Z",
      "functions_new": [
        {
          "version": [
            ">=2.2.0 <2.4.24"
          ],
          "functionId": {
            "filePath": "lib/compress.js",
            "functionName": "Compressor"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-UGLIFYJS-10041"
      ],
      "disclosureTime": "2015-08-24T09:29:10Z",
      "packageManager": "npm",
      "publicationTime": "2015-08-24T09:29:10Z",
      "modificationTime": "2022-01-03T17:48:01.009006Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "jade@1.11.0",
        "transformers@2.1.0",
        "uglify-js@2.2.5"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": true,
      "name": "uglify-js",
      "version": "2.2.5"
    },
    {
      "id": "npm:uglify-js:20151024",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Adam Baldwin"
      ],
      "semver": {
        "vulnerable": [
          "<2.6.0"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.6.0"
      ],
      "patches": [
        {
          "id": "patch:npm:uglify-js:20151024:0",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"
          ],
          "version": "<= 2.4.23 >=2.2.0",
          "comments": [
            "https://github.com/mishoo/UglifyJS2/commit/63d35f8.patch"
          ],
          "modificationTime": "2019-12-03T11:40:45.767604Z"
        },
        {
          "id": "patch:npm:uglify-js:20151024:1",
          "urls": [
            "https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"
          ],
          "version": "<2.6.0 >2.4.23",
          "comments": [
            "https://github.com/mishoo/UglifyJS2/commit/63d35f8.patch"
          ],
          "modificationTime": "2019-12-03T11:40:45.768705Z"
        }
      ],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [
        {
          "version": [
            ">1.3.5 <2.6.0"
          ],
          "functionId": {
            "filePath": "lib/parse.js",
            "className": null,
            "functionName": "parse_js_number"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "uglify-js",
      "references": [
        {
          "url": "https://github.com/mishoo/UglifyJS2/commit/63d35f8f6db6d90d6142132d2d5f0bd5d3d698aa",
          "title": "GitHub Commit"
        },
        {
          "url": "https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS",
          "title": "OWASP - ReDoS"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:48:00.481391Z"
        }
      ],
      "description": "## Overview\r\nThe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (ReDoS) attacks when long inputs of certain patterns are processed.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\r\n\r\n## Remediation\r\nUpgrade to version `2.6.0` or greater.\r\nIf a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\r\n\r\n## References\r\n- [OWASP - ReDoS](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)",
      "epssDetails": {
        "percentile": "0.62742",
        "probability": "0.00264",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2015-8858"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          "48"
        ],
        "GHSA": [
          "GHSA-c9f4-xj24-8jqx"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-UGLIFYJS-10059"
        ]
      },
      "packageName": "uglify-js",
      "proprietary": false,
      "creationTime": "2015-11-06T02:09:36.186000Z",
      "functions_new": [
        {
          "version": [
            ">1.3.5 <2.6.0"
          ],
          "functionId": {
            "filePath": "lib/parse.js",
            "functionName": "parse_js_number"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-UGLIFYJS-10059"
      ],
      "disclosureTime": "2015-10-24T21:01:32Z",
      "packageManager": "npm",
      "publicationTime": "2015-11-06T02:09:36Z",
      "modificationTime": "2022-01-03T17:48:00.481391Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "jade@1.11.0",
        "transformers@2.1.0",
        "uglify-js@2.2.5"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": true,
      "name": "uglify-js",
      "version": "2.2.5"
    },
    {
      "id": "SNYK-JS-UGLIFYJS-1727251",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "ready-research"
      ],
      "semver": {
        "vulnerable": [
          "<3.14.3"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.14.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "uglify-js",
      "references": [
        {
          "url": "https://github.com/mishoo/UglifyJS/commit/157521066fc43cff2feab7ffc1ecea603617606b",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/mishoo/UglifyJS/issues/5133",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/mishoo/UglifyJS/pull/5134",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/mishoo/UglifyJS/pull/5135",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[uglify-js](http://npmjs.com/package/uglify-js) is a JavaScript parser, minifier, compressor and beautifier toolkit.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `string_template` and the `decode_template` functions.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `uglify-js` to version 3.14.3 or higher.\n## References\n- [GitHub Commit](https://github.com/mishoo/UglifyJS/commit/157521066fc43cff2feab7ffc1ecea603617606b)\n- [GitHub Issue](https://github.com/mishoo/UglifyJS/issues/5133)\n- [GitHub PR](https://github.com/mishoo/UglifyJS/pull/5134)\n- [GitHub PR](https://github.com/mishoo/UglifyJS/pull/5135)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1333"
        ]
      },
      "packageName": "uglify-js",
      "proprietary": false,
      "creationTime": "2021-09-30T14:25:50.130236Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-09-30T14:22:21Z",
      "packageManager": "npm",
      "publicationTime": "2021-11-09T18:42:15.313328Z",
      "modificationTime": "2021-11-09T18:42:15.332622Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "jade@1.11.0",
        "uglify-js@2.8.29"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "uglify-js",
      "version": "2.8.29"
    },
    {
      "id": "SNYK-JS-UNDEFSAFE-548940",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
      "credit": [
        "JHU System Security Lab"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.3"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.0.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "medium",
      "cvssScore": 6.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "undefsafe",
      "references": [
        {
          "url": "https://github.com/remy/undefsafe/commit/f272681b3a50e2c4cbb6a8533795e1453382c822",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 6.3,
          "modificationTime": "2022-01-03T17:53:47.278789Z"
        }
      ],
      "description": "## Overview\n[undefsafe](https://www.npmjs.com/package/undefsafe) is a Simple function for retrieving deep object properties without getting \"Cannot read property 'X' of undefined\".\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"undefsafe\");\r\nvar payload = \"__proto__.toString\";\r\na({},payload,\"JHU\");\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `undefsafe` to version 2.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/remy/undefsafe/commit/f272681b3a50e2c4cbb6a8533795e1453382c822)\n",
      "epssDetails": {
        "percentile": "0.30357",
        "probability": "0.00074",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-10795"
        ],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "undefsafe",
      "proprietary": true,
      "creationTime": "2020-02-18T08:53:40.650407Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-02-18T08:51:08Z",
      "packageManager": "npm",
      "publicationTime": "2020-02-18T11:01:36Z",
      "modificationTime": "2022-08-25T12:14:40.896090Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "undefsafe@2.0.2"
      ],
      "upgradePath": [
        false,
        "nodemon@1.19.4",
        "undefsafe@2.0.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "undefsafe",
      "version": "2.0.2"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "braces@2.3.2",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "nanomatch@1.2.13",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "anymatch@2.0.0",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "SNYK-JS-UNSETVALUE-2400660",
      "title": "Prototype Pollution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "khizar"
      ],
      "semver": {
        "vulnerable": [
          "<2.0.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "unset-value",
      "references": [
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/issues/11",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/pull/12",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/jonschlinkert/unset-value/releases",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-1321"
        ]
      },
      "packageName": "unset-value",
      "proprietary": false,
      "creationTime": "2022-02-13T14:46:07.185334Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-13T14:44:04Z",
      "packageManager": "npm",
      "publicationTime": "2022-02-13T15:26:38.063549Z",
      "modificationTime": "2022-02-13T15:26:38.065734Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "nodetest2@0.0.0",
        "nodemon@1.19.4",
        "chokidar@2.1.8",
        "readdirp@2.2.1",
        "micromatch@3.1.10",
        "extglob@2.0.4",
        "expand-brackets@2.1.4",
        "snapdragon@0.8.2",
        "base@0.11.2",
        "cache-base@1.0.1",
        "unset-value@1.0.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "unset-value",
      "version": "1.0.0"
    },
    {
      "id": "npm:clean-css:20180306",
      "title": "Regular Expression Denial of Service (ReDoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P/RL:O/RC:C",
      "credit": [
        "Jamie Davis"
      ],
      "semver": {
        "vulnerable": [
          "<4.1.11"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "4.1.11"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            "<4.1.11"
          ],
          "functionId": {
            "filePath": "lib/optimizer/validator.js",
            "className": null,
            "functionName": "validator"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "clean-css",
      "references": [
        {
          "url": "https://github.com/jakubpawlowicz/clean-css/commit/2929bafbf8cdf7dccb24e0949c70833764fa87e3",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n\n[clean-css](https://www.npmjs.com/package/clean-css) is a fast and efficient CSS optimizer for Node.js platform and any modern browser.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\nattacks. This can cause an impact of about 10 seconds matching time for data 70k characters long.\n\n## Disclosure Timeline\n* Feb 15th, 2018 - Initial Disclosure to package owner\n* Feb 20th, 2018 - Initial Response from package owner\n* Mar 6th, 2018 - Fix issued\n* Mar 7th, 2018 - Vulnerability published\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `clean-css` to version 4.1.11 or higher.\n\n\n## References\n\n- [GitHub Advisory](https://github.com/advisories/GHSA-wxhq-pm8v-cw75)\n\n- [GitHub Commit](https://github.com/jakubpawlowicz/clean-css/commit/2929bafbf8cdf7dccb24e0949c70833764fa87e3)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400",
          "CWE-185"
        ],
        "NSP": [
          "785"
        ],
        "GHSA": [
          "GHSA-wxhq-pm8v-cw75"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-CLEANCSS-11052"
        ]
      },
      "packageName": "clean-css",
      "proprietary": true,
      "creationTime": "2018-03-07T11:56:23.869000Z",
      "functions_new": [
        {
          "version": [
            "<4.1.11"
          ],
          "functionId": {
            "filePath": "lib/optimizer/validator.js",
            "functionName": "validator"
          }
        }
      ],
      "alternativeIds": [
        "SNYK-JS-CLEANCSS-11052"
      ],
      "disclosureTime": "2018-03-06T11:56:23Z",
      "packageManager": "npm",
      "publicationTime": "2018-03-07T11:51:05Z",
      "modificationTime": "2022-03-09T10:46:33.100563Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "nodetest2@0.0.0",
        "jade@1.11.0",
        "clean-css@3.4.28"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "clean-css",
      "version": "3.4.28"
    },
    {
      "id": "npm:constantinople:20180421",
      "title": "Sandbox Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N",
      "credit": [
        "Mike Samuel"
      ],
      "semver": {
        "vulnerable": [
          "<3.1.1"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.1.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "js",
      "severity": "critical",
      "cvssScore": 10,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "constantinople",
      "references": [
        {
          "url": "https://github.com/pugjs/constantinople/commit/01d409c0d081dfd65223e6b7767c244156d35f7f",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[constantinople](https://github.com/ForbesLindesay/constantinople) is a Determine whether a JavaScript expression evaluates to a constant (using acorn)\n\nAffected versions of this package are vulnerable to Sandbox Bypass which can lead to arbitrary code execution.\n## Remediation\nUpgrade `constantinople` to version 3.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/pugjs/constantinople/commit/01d409c0d081dfd65223e6b7767c244156d35f7f)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-264"
        ],
        "NSP": [
          "568"
        ],
        "GHSA": [
          "GHSA-4vmm-mhcq-4x9j"
        ],
        "ALTERNATIVE": [
          "SNYK-JS-CONSTANTINOPLE-12136"
        ]
      },
      "packageName": "constantinople",
      "proprietary": false,
      "creationTime": "2018-03-02T16:46:56.854000Z",
      "functions_new": [],
      "alternativeIds": [
        "SNYK-JS-CONSTANTINOPLE-12136"
      ],
      "disclosureTime": "2018-04-21T04:33:52Z",
      "packageManager": "npm",
      "publicationTime": "2018-05-09T16:11:26Z",
      "modificationTime": "2021-08-17T13:38:09.956106Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "from": [
        "nodetest2@0.0.0",
        "jade@1.11.0",
        "constantinople@3.0.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "constantinople",
      "version": "3.0.2"
    }
  ],
  "ok": false,
  "dependencyCount": 361,
  "org": "zrockstara",
  "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.1\nignore: {}\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {},
    "orgLicenseRules": {
      "AGPL-1.0": {
        "licenseType": "AGPL-1.0",
        "severity": "high",
        "instructions": ""
      },
      "AGPL-3.0": {
        "licenseType": "AGPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "Artistic-1.0": {
        "licenseType": "Artistic-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "Artistic-2.0": {
        "licenseType": "Artistic-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "CDDL-1.0": {
        "licenseType": "CDDL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "CPOL-1.02": {
        "licenseType": "CPOL-1.02",
        "severity": "high",
        "instructions": ""
      },
      "EPL-1.0": {
        "licenseType": "EPL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "GPL-2.0": {
        "licenseType": "GPL-2.0",
        "severity": "high",
        "instructions": ""
      },
      "GPL-3.0": {
        "licenseType": "GPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "LGPL-2.0": {
        "licenseType": "LGPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-2.1": {
        "licenseType": "LGPL-2.1",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-3.0": {
        "licenseType": "LGPL-3.0",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-1.1": {
        "licenseType": "MPL-1.1",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-2.0": {
        "licenseType": "MPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "MS-RL": {
        "licenseType": "MS-RL",
        "severity": "medium",
        "instructions": ""
      },
      "SimPL-2.0": {
        "licenseType": "SimPL-2.0",
        "severity": "high",
        "instructions": ""
      }
    }
  },
  "packageManager": "npm",
  "ignoreSettings": {
    "adminOnly": false,
    "reasonRequired": false,
    "disregardFilesystemIgnores": false
  },
  "summary": "174 vulnerable dependency paths",
  "remediation": {
    "unresolved": [
      {
        "id": "SNYK-JS-ANSIREGEX-1583908",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C",
        "credit": [
          "Yeting Li"
        ],
        "semver": {
          "vulnerable": [
            ">=2.1.1 <3.0.1",
            ">=4.0.0 <4.1.1",
            ">=5.0.0 <5.0.1",
            ">=6.0.0 <6.0.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "3.0.1",
          "4.1.1",
          "5.0.1",
          "6.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ansi-regex",
        "references": [
          {
            "url": "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/chalk/ansi-regex/pull/37",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-05-18T11:04:40.935720Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-10-25T16:45:11.225574Z"
          },
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-11-08T01:10:38.334810Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the sub-patterns` [[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`.\r\n\r\n\r\n### PoC\r\n```js\r\nimport ansiRegex from 'ansi-regex';\r\n\r\nfor(var i = 1; i <= 50000; i++) {\r\n    var time = Date.now();\r\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\r\n    ansiRegex().test(attack_str)\r\n    var time_cost = Date.now() - time;\r\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `ansi-regex` to version 3.0.1, 4.1.1, 5.0.1, 6.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\n- [GitHub Commit](https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9)\n- [GitHub PR](https://github.com/chalk/ansi-regex/pull/37)\n",
        "epssDetails": {
          "percentile": "0.65091",
          "probability": "0.00299",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-3807"
          ],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "ansi-regex",
        "proprietary": false,
        "creationTime": "2021-09-09T14:28:31.617043Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-09T14:27:43Z",
        "packageManager": "npm",
        "publicationTime": "2021-09-12T12:52:37Z",
        "modificationTime": "2022-11-08T01:10:38.334810Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "boxen@1.3.0",
          "widest-line@2.0.1",
          "string-width@2.1.1",
          "strip-ansi@4.0.0",
          "ansi-regex@3.0.0"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "boxen@1.3.0",
          "widest-line@2.0.1",
          "string-width@2.1.1",
          "strip-ansi@4.0.0",
          "ansi-regex@3.0.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "ansi-regex",
        "version": "3.0.0",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-DECODEURICOMPONENT-3149970",
        "title": "Denial of Service (DoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "KatsuragiCSL"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "decode-uri-component",
        "references": [
          {
            "url": "https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/SamVerschueren/decode-uri-component/issues/5",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/sindresorhus/query-string/issues/345",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2023-02-17T14:05:51.889878Z"
          },
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-12-02T01:11:11.714842Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to improper input validation, when the hash string `# kun%ea%ba%5a%ba` is being parsed by `decodeUriComponent`.\r\n\r\n## PoC\r\n```js\r\nconst decodeUriComponent = require('decode-uri-component');\r\n\r\nvar x = decodeUriComponent('%ea%ba%5a%ba');\r\n\r\nconsole.log(x);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `decode-uri-component` to version 0.2.2 or higher.\n## References\n- [GitHub Commit](https://github.com/SamVerschueren/decode-uri-component/commit/980e0bf09b64d94f1aa79012f895816c30ffd152)\n- [GitHub Issue](https://github.com/SamVerschueren/decode-uri-component/issues/5)\n- [GitHub Issue](https://github.com/sindresorhus/query-string/issues/345)\n- [GitHub Release](https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.2)\n",
        "epssDetails": {
          "percentile": "0.17338",
          "probability": "0.00050",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-38900"
          ],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "decode-uri-component",
        "proprietary": false,
        "creationTime": "2022-11-28T14:24:36.010219Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-11-28T14:06:23Z",
        "packageManager": "npm",
        "publicationTime": "2022-11-28T16:12:34.614831Z",
        "modificationTime": "2023-03-16T12:52:48.280507Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "readdirp@2.2.1",
          "micromatch@3.1.10",
          "extglob@2.0.4",
          "expand-brackets@2.1.4",
          "snapdragon@0.8.2",
          "source-map-resolve@0.5.2",
          "decode-uri-component@0.2.0"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "readdirp@2.2.1",
          "micromatch@3.1.10",
          "extglob@2.0.4",
          "expand-brackets@2.1.4",
          "snapdragon@0.8.2",
          "source-map-resolve@0.5.2",
          "decode-uri-component@0.2.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "decode-uri-component",
        "version": "0.2.0",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-DOTPROP-543489",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "aaron_costello"
        ],
        "semver": {
          "vulnerable": [
            ">1.0.1 <4.2.1",
            ">=5.0.0 <5.1.1"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.2.1",
          "5.1.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [
          {
            "version": [
              ">1.0.1 <5.1.1"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports.set"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "dot-prop",
        "references": [
          {
            "url": "https://github.com/sindresorhus/dot-prop/commit/3039c8c07f6fdaa8b595ec869ae0895686a7a0f2",
            "title": "GitHub Commit"
          },
          {
            "url": "https://hackerone.com/reports/719856",
            "title": "HackerOne Report"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2022-09-01T21:49:01.095389Z"
          },
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2022-08-06T01:11:14.209198Z"
          }
        ],
        "description": "## Overview\n[dot-prop](https://github.com/sindresorhus/dot-prop#readme) is a package to get, set, or delete a property from a nested object using a dot path.\n\nAffected versions of this package are vulnerable to Prototype Pollution. It is possible for a user to modify the prototype of a base object.\r\n\r\n## PoC by aaron_costello \r\n```\r\nvar dotProp = require(\"dot-prop\")\r\nconst object = {};\r\nconsole.log(\"Before \" + object.b); //Undefined\r\ndotProp.set(object, '__proto__.b', true);\r\nconsole.log(\"After \" + {}.b); //true\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `dot-prop` to version 4.2.1, 5.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/sindresorhus/dot-prop/commit/3039c8c07f6fdaa8b595ec869ae0895686a7a0f2)\n- [HackerOne Report](https://hackerone.com/reports/719856)\n",
        "epssDetails": {
          "percentile": "0.54383",
          "probability": "0.00183",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-8116"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-ff7x-qrg7-qggm"
          ]
        },
        "packageName": "dot-prop",
        "proprietary": false,
        "creationTime": "2020-01-28T15:18:37.743372Z",
        "functions_new": [
          {
            "version": [
              ">1.0.1 <5.1.1"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports.set"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2020-01-28T10:17:51Z",
        "packageManager": "npm",
        "publicationTime": "2020-01-28T16:23:39Z",
        "modificationTime": "2022-09-01T21:49:01.095389Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "configstore@3.1.2",
          "dot-prop@4.2.0"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "configstore@3.1.2",
          "dot-prop@4.2.1"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "dot-prop",
        "version": "4.2.0",
        "severityWithCritical": "medium"
      },
      {
        "id": "SNYK-JS-FSEVENTS-5487987",
        "title": "Exposure of Resource to Wrong Sphere",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:H",
        "credit": [
          "giraffesecurity.dev"
        ],
        "semver": {
          "vulnerable": [
            "<1.2.11"
          ]
        },
        "exploit": "High",
        "fixedIn": [
          "1.2.11"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 9.8,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "fsevents",
        "references": [
          {
            "url": "https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/fsevents/fsevents/issues/357",
            "title": "GitHub Issue"
          },
          {
            "url": "https://fsevents-binaries.s3-us-west-2.amazonaws.com/",
            "title": "Impacted S3 Bucket"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2023-10-17T01:10:49.793831Z"
          }
        ],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Exposure of Resource to Wrong Sphere by loading a binary from an insecure hardcoded S3 bucket URL, which was demonstrated by an ethical hacker to be susceptible to takeover by malicious actors and used to conduct remote code execution. Loading the remote binary was [removed](https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058) in version `1.2.11` meaning this and later versions were not exposed to this attack vector.\r\n\r\nDuring the disclosure process Snyk confirmed with the security researcher that AWS had agreed to take ownership and block all access to the S3 bucket and as such it has mitigated the straightforward attack vector - this can be further confirmed by attempting to access the [bucket](https://fsevents-binaries.s3-us-west-2.amazonaws.com/) which returns a `AllAccessDisabled` error.\r\n\r\n**Note:** While the threat was thought to be fully mitigated by limiting access to the named bucket in April 2023, more recent research (August 2023) has shown that not all attack vectors were cut off by that effort so the possibility of an attack on the same affected versions still exists, by other means. With this in mind, we have raised the current impact ratings for this vulnerability to reflect the possibility of remote code execution. We strongly recommend not using an impacted version.\n## Remediation\nUpgrade `fsevents` to version 1.2.11 or higher.\n## References\n- [GitHub Commit](https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058)\n- [GitHub Issue](https://github.com/fsevents/fsevents/issues/357)\n- [Impacted S3 Bucket](https://fsevents-binaries.s3-us-west-2.amazonaws.com/)\n",
        "epssDetails": {
          "percentile": "0.08492",
          "probability": "0.00044",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2023-45311"
          ],
          "CWE": [
            "CWE-668"
          ]
        },
        "packageName": "fsevents",
        "proprietary": true,
        "creationTime": "2023-04-27T08:21:15.583576Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-04-27T08:21:12Z",
        "packageManager": "npm",
        "publicationTime": "2023-04-27T19:48:58.599193Z",
        "modificationTime": "2023-10-17T01:10:49.793831Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.11"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "fsevents",
        "version": "1.2.9",
        "severityWithCritical": "critical"
      },
      {
        "id": "SNYK-JS-INI-1048974",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
        "credit": [
          "Eugene Lim",
          "Government Technology Agency Cyber Security Group"
        ],
        "semver": {
          "vulnerable": [
            "<1.3.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "1.3.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "ini",
        "references": [
          {
            "url": "https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7",
            "title": "Eugene Lim - Research Blog Post"
          },
          {
            "url": "https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2022-12-03T01:11:01.035564Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2022-10-27T14:23:39.509078Z"
          }
        ],
        "description": "## Overview\n[ini](https://www.npmjs.org/package/ini) is an An ini encoder/decoder for node\n\nAffected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\r\n\r\n## PoC by Eugene Lim\r\n\r\npayload.ini\r\n```\r\n[__proto__]\r\npolluted = \"polluted\"\r\n```\r\n\r\npoc.js:\r\n```\r\nvar fs = require('fs')\r\nvar ini = require('ini')\r\n\r\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\r\nconsole.log(parsed)\r\nconsole.log(parsed.__proto__)\r\nconsole.log(polluted)\r\n```\r\n\r\n```\r\n> node poc.js\r\n{}\r\n{ polluted: 'polluted' }\r\n{ polluted: 'polluted' }\r\npolluted\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `ini` to version 1.3.6 or higher.\n## References\n- [Eugene Lim - Research Blog Post](https://medium.com/csg-govtech/supply-chain-pollution-discovering-a-16-million-download-week-node-js-2fa4d2c27cf7)\n- [GitHub Commit](https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1)\n",
        "epssDetails": {
          "percentile": "0.69305",
          "probability": "0.00384",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7788"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "GHSA": [
            "GHSA-qqgx-2p2h-9c37"
          ]
        },
        "packageName": "ini",
        "proprietary": true,
        "creationTime": "2020-12-08T15:34:07.743781Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-12-08T13:02:04Z",
        "packageManager": "npm",
        "publicationTime": "2020-12-10T18:08:38Z",
        "modificationTime": "2022-12-03T01:11:01.035564Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "latest-version@3.1.0",
          "package-json@4.0.1",
          "registry-url@3.1.0",
          "rc@1.2.8",
          "ini@1.3.5"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "latest-version@3.1.0",
          "package-json@4.0.1",
          "registry-url@3.1.0",
          "rc@1.2.8",
          "ini@1.3.6"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "ini",
        "version": "1.3.5",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-KINDOF-537849",
        "title": "Validation Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C",
        "credit": [
          "Feng Xiao"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.0.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "6.0.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              ">=6.0.0 <6.0.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "ctorName"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "kind-of",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/kind-of/issues/30",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/jonschlinkert/kind-of/pull/31",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-01-03T17:58:16.269822Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "cvssV3BaseScore": 5.9,
            "modificationTime": "2022-09-13T18:26:44.905560Z"
          }
        ],
        "description": "## Overview\n[kind-of](https://github.com/jonschlinkert/kind-of) is a package that gets the native type of a value.\n\nAffected versions of this package are vulnerable to Validation Bypass. It leverages the built-in constructor of unsafe user-input to detect type information. However, a crafted payload can overwrite this built in attribute to manipulate the type detection result.\r\n\r\n## PoC by Feng Xiao\r\n```\r\nvar kindOf = require('kind-of');\r\n\r\n\r\nvar user_input = {\r\n  user: 'barney',\r\n  age: 36,\r\n  active: true,\r\n  \"constructor\":{\"name\":\"Symbol\"}\r\n};\r\nconsole.log(kindOf(user_input));\r\n```\n## Remediation\nUpgrade `kind-of` to version 6.0.3 or higher.\n## References\n- [GitHub Issue](https://github.com/jonschlinkert/kind-of/issues/30)\n- [GitHub PR](https://github.com/jonschlinkert/kind-of/pull/31)\n",
        "epssDetails": {
          "percentile": "0.37508",
          "probability": "0.00091",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-20149"
          ],
          "CWE": [
            "CWE-20"
          ],
          "NSP": [
            "1490"
          ],
          "GHSA": [
            "GHSA-6c8f-qphg-qjgp"
          ]
        },
        "packageName": "kind-of",
        "proprietary": false,
        "creationTime": "2019-12-16T14:21:14.675101Z",
        "functions_new": [
          {
            "version": [
              ">=6.0.0 <6.0.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "ctorName"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2019-12-16T14:31:14Z",
        "packageManager": "npm",
        "publicationTime": "2020-01-19T14:31:13Z",
        "modificationTime": "2022-09-13T18:26:44.905560Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "readdirp@2.2.1",
          "micromatch@3.1.10",
          "extglob@2.0.4",
          "expand-brackets@2.1.4",
          "snapdragon@0.8.2",
          "base@0.11.2",
          "define-property@1.0.0",
          "is-descriptor@1.0.2",
          "is-data-descriptor@1.0.0",
          "kind-of@6.0.2"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "readdirp@2.2.1",
          "micromatch@3.1.10",
          "extglob@2.0.4",
          "expand-brackets@2.1.4",
          "snapdragon@0.8.2",
          "base@0.11.2",
          "define-property@1.0.0",
          "is-descriptor@1.0.2",
          "is-data-descriptor@1.0.0",
          "kind-of@6.0.3"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "kind-of",
        "version": "6.0.2",
        "severityWithCritical": "low"
      },
      {
        "id": "SNYK-JS-MINIMATCH-3050818",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<3.0.5"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.0.5"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimatch",
        "references": [
          {
            "url": "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-11-27T21:40:17.490683Z"
          },
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-10-20T01:10:31.056597Z"
          }
        ],
        "description": "## Overview\n[minimatch](https://www.npmjs.com/package/minimatch) is a minimal matching utility.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `braceExpand` function in `minimatch.js`.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `minimatch` to version 3.0.5 or higher.\n## References\n- [GitHub Commit](https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6)\n",
        "epssDetails": {
          "percentile": "0.17961",
          "probability": "0.00051",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-3517"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "minimatch",
        "proprietary": false,
        "creationTime": "2022-10-18T06:10:47.980262Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-10-18T06:00:25Z",
        "packageManager": "npm",
        "publicationTime": "2022-10-18T06:29:18.078950Z",
        "modificationTime": "2022-11-27T21:40:17.490683Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "rimraf@2.6.3",
          "glob@7.1.3",
          "minimatch@3.0.4"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "rimraf@2.6.3",
          "glob@7.1.3",
          "minimatch@3.0.5"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "minimatch",
        "version": "3.0.4",
        "severityWithCritical": "medium"
      },
      {
        "id": "SNYK-JS-MINIMIST-2429795",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "credit": [
          "Unknown"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.4",
            ">=1.2.0 <1.2.6"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.4",
          "1.2.6"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d",
            "title": "Fix Commit"
          },
          {
            "url": "https://github.com/minimistjs/minimist/blob/master/index.js%23L69",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2022-05-18T11:05:33.152638Z"
          },
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2022-04-13T01:10:15.021168Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2023-04-24T13:51:51.456864Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution due to a missing handler to `Function.prototype`.\r\n\r\n**Notes:** \r\n\r\n- This vulnerability is a bypass to [CVE-2020-7598](https://security.snyk.io/vuln/SNYK-JS-MINIMIST-559764)\r\n\r\n- The reason for the different CVSS between CVE-2021-44906 to CVE-2020-7598, is that CVE-2020-7598 can pollute objects, while CVE-2021-44906 can pollute only function.\r\n\r\n\r\n## PoC by Snyk\r\n```js\r\nrequire('minimist')('--_.constructor.constructor.prototype.foo bar'.split(' '));\r\nconsole.log((function(){}).foo); // bar\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.4, 1.2.6 or higher.\n## References\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703)\n- [Fix Commit](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)\n- [Vulnerable Code](https://github.com/minimistjs/minimist/blob/master/index.js#L69)\n",
        "epssDetails": {
          "percentile": "0.68723",
          "probability": "0.00370",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-44906"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "SNYK": [
            "SNYK-JS-MINIMIST-559764"
          ]
        },
        "packageName": "minimist",
        "proprietary": false,
        "creationTime": "2022-03-18T13:02:08.840039Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-03-18T12:24:05Z",
        "packageManager": "npm",
        "publicationTime": "2022-03-21T12:09:35Z",
        "modificationTime": "2023-04-24T13:51:51.456864Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "latest-version@3.1.0",
          "package-json@4.0.1",
          "registry-url@3.1.0",
          "rc@1.2.8",
          "minimist@1.2.0"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "latest-version@3.1.0",
          "package-json@4.0.1",
          "registry-url@3.1.0",
          "rc@1.2.8",
          "minimist@1.2.6"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "minimist",
        "version": "1.2.0",
        "severityWithCritical": "low"
      },
      {
        "id": "SNYK-JS-MINIMIST-559764",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "Snyk Security Team"
        ],
        "semver": {
          "vulnerable": [
            "<0.2.1",
            ">=1.0.0 <1.2.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "0.2.1",
          "1.2.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.6,
        "functions": [
          {
            "version": [
              "<0.2.1",
              ">=1.0.0 <1.1.1"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "setKey"
            }
          },
          {
            "version": [
              "<0.2.1",
              ">=1.1.1 <1.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "className": null,
              "functionName": "module.exports.setKey"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "minimist",
        "references": [
          {
            "url": "https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a",
            "title": "Command Injection PoC"
          },
          {
            "url": "https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94",
            "title": "GitHub Fix Commit #1"
          },
          {
            "url": "https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab",
            "title": "GitHub Fix Commit #2"
          },
          {
            "url": "https://snyk.io/blog/prototype-pollution-minimist/",
            "title": "Snyk Research Blog"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-05-03T23:19:09.248741Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2022-09-01T16:53:55.159376Z"
          },
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 5.6,
            "modificationTime": "2022-04-23T01:11:18.536458Z"
          }
        ],
        "description": "## Overview\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module.\n\nAffected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` or `__proto__` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nrequire('minimist')('--__proto__.injected0 value0'.split(' '));\r\nconsole.log(({}).injected0 === 'value0'); // true\r\n\r\nrequire('minimist')('--constructor.prototype.injected1 value1'.split(' '));\r\nconsole.log(({}).injected1 === 'value1'); // true\r\n```\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `minimist` to version 0.2.1, 1.2.3 or higher.\n## References\n- [Command Injection PoC](https://gist.github.com/Kirill89/47feb345b09bf081317f08dd43403a8a)\n- [GitHub Fix Commit #1](https://github.com/substack/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)\n- [GitHub Fix Commit #2](https://github.com/substack/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)\n- [Snyk Research Blog](https://snyk.io/blog/prototype-pollution-minimist/)\n",
        "epssDetails": {
          "percentile": "0.41634",
          "probability": "0.00105",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2020-7598"
          ],
          "CWE": [
            "CWE-1321"
          ],
          "NSP": [
            "1179"
          ],
          "GHSA": [
            "GHSA-vh95-rmgr-6w4m"
          ]
        },
        "packageName": "minimist",
        "proprietary": true,
        "creationTime": "2020-03-11T08:25:47.093051Z",
        "functions_new": [
          {
            "version": [
              "<0.2.1",
              ">=1.0.0 <1.1.1"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "setKey"
            }
          },
          {
            "version": [
              "<0.2.1",
              ">=1.1.1 <1.2.3"
            ],
            "functionId": {
              "filePath": "index.js",
              "functionName": "module.exports.setKey"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2020-03-10T08:22:24Z",
        "packageManager": "npm",
        "publicationTime": "2020-03-11T08:22:19Z",
        "modificationTime": "2022-09-01T16:53:55.159376Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "latest-version@3.1.0",
          "package-json@4.0.1",
          "registry-url@3.1.0",
          "rc@1.2.8",
          "minimist@1.2.0"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "update-notifier@2.5.0",
          "latest-version@3.1.0",
          "package-json@4.0.1",
          "registry-url@3.1.0",
          "rc@1.2.8",
          "minimist@1.2.3"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "minimist",
        "version": "1.2.0",
        "severityWithCritical": "medium"
      },
      {
        "id": "SNYK-JS-SEMVER-3247795",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Alessio Della Libera - Snyk Research Team"
        ],
        "semver": {
          "vulnerable": [
            "<5.7.2",
            ">=6.0.0 <6.3.1",
            ">=7.0.0 <7.5.2"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "5.7.2",
          "6.3.1",
          "7.5.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "semver",
        "references": [
          {
            "url": "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-semver/pull/564",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/classes/range.js%23L97-L104",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L138",
            "title": "Vulnerable Code"
          },
          {
            "url": "https://github.com/npm/node-semver/blob/main/internal/re.js%23L160",
            "title": "Vulnerable Code"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2023-07-06T01:12:12.552518Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2023-07-13T13:32:48.730054Z"
          }
        ],
        "description": "## Overview\n[semver](https://github.com/npm/node-semver) is a semantic version parser used by npm.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function `new Range`, when untrusted user data is provided as a range.\r\n\r\n\r\n## PoC\r\n\r\n```js\r\n\r\nconst semver = require('semver')\r\nconst lengths_2 = [2000, 4000, 8000, 16000, 32000, 64000, 128000]\r\n\r\nconsole.log(\"n[+] Valid range - Test payloads\")\r\nfor (let i = 0; i =1.2.3' + ' '.repeat(lengths_2[i]) + '<1.3.0';\r\nconst start = Date.now()\r\nsemver.validRange(value)\r\n// semver.minVersion(value)\r\n// semver.maxSatisfying([\"1.2.3\"], value)\r\n// semver.minSatisfying([\"1.2.3\"], value)\r\n// new semver.Range(value, {})\r\n\r\nconst end = Date.now();\r\nconsole.log('length=%d, time=%d ms', value.length, end - start);\r\n}\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `semver` to version 5.7.2, 6.3.1, 7.5.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441)\n- [GitHub Commit](https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c)\n- [GitHub PR](https://github.com/npm/node-semver/pull/564)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L138)\n- [Vulnerable Code](https://github.com/npm/node-semver/blob/main/internal/re.js#L160)\n",
        "epssDetails": {
          "percentile": "0.38160",
          "probability": "0.00091",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2022-25883"
          ],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "semver",
        "proprietary": true,
        "creationTime": "2023-01-25T16:16:50.073158Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2023-01-25T16:00:59Z",
        "packageManager": "npm",
        "publicationTime": "2023-06-20T15:39:58.313421Z",
        "modificationTime": "2023-07-13T13:32:48.730054Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "semver@5.7.1"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "semver@5.7.2"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "semver",
        "version": "5.7.1",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-TAR-1536528",
        "title": "Arbitrary File Overwrite",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
        "credit": [
          "ginkoid",
          "chen-robert"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.3",
            ">=4.0.0 <4.4.15",
            ">=5.0.0 <5.0.7",
            ">=6.0.0 <6.1.2"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.2.3",
          "4.4.15",
          "5.0.7",
          "6.1.2"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-07-03T01:10:57.821855Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-05-18T11:03:10.716138Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-11-27T21:12:46.430209Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. This is due to insufficient symlink protection.\r\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic is insufficient when extracting tar files that contain both a directory and a symlink with the same name as the directory. This order of operations results in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to `mkdir` for that directory are skipped.\r\nHowever, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it is possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location.\n## Remediation\nUpgrade `tar` to version 3.2.3, 4.4.15, 5.0.7, 6.1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20)\n",
        "epssDetails": {
          "percentile": "0.80342",
          "probability": "0.00889",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-32803"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1771"
          ],
          "GHSA": [
            "GHSA-r628-mhmh-qjhw"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-08-04T06:32:44.747650Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-08-04T06:13:39Z",
        "packageManager": "npm",
        "publicationTime": "2021-08-04T07:24:54.942553Z",
        "modificationTime": "2022-11-27T21:12:46.430209Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.8"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.15"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "tar",
        "version": "4.4.8",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-TAR-1536531",
        "title": "Arbitrary File Overwrite",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
        "credit": [
          "ginkoid",
          "chen-robert"
        ],
        "semver": {
          "vulnerable": [
            "<3.2.2",
            ">=4.0.0 <4.4.14",
            ">=5.0.0 <5.0.6",
            ">=6.0.0 <6.1.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.2.2",
          "4.4.14",
          "5.0.6",
          "6.1.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.2,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-05-18T11:04:11.840455Z"
          },
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-04-26T01:10:35.141363Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-11-27T21:12:26.283913Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Overwrite. This is due to insufficient absolute path sanitization.\r\n\r\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example, the path `/home/user/.bashrc` would turn into `home/user/.bashrc`.\r\n\r\nThis logic is insufficient when file paths contain repeated path roots such as `////home/user/.bashrc`. `node-tar` only strips a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) still resolves to an absolute path.\n## Remediation\nUpgrade `tar` to version 3.2.2, 4.4.14, 5.0.6, 6.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4)\n",
        "epssDetails": {
          "percentile": "0.85843",
          "probability": "0.01656",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-32804"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1770"
          ],
          "GHSA": [
            "GHSA-3jfq-g458-7qm9"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-08-04T06:40:36.725155Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-08-04T06:33:52Z",
        "packageManager": "npm",
        "publicationTime": "2021-08-04T07:24:55.599985Z",
        "modificationTime": "2022-11-27T21:12:26.283913Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.8"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.14"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "tar",
        "version": "4.4.8",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-TAR-1536758",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:U/RL:O/RC:R",
        "credit": [
          "@isaacs"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.1.4",
            ">=5.0.0 <5.0.8",
            "<4.4.16"
          ]
        },
        "exploit": "Unproven",
        "fixedIn": [
          "6.1.4",
          "5.0.8",
          "4.4.16"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/06cbde5935aa7643f578f874de84a7da2a74fe3a",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-tar/commit/adf35115dbc6e7a479fe3c38f859baf6ffff7a7a",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/npm/node-tar/commit/d3d5a4e4560f18131e64fc62f5a281b238ef2ecf",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). When stripping the trailing slash from `files` arguments, the  `f.replace(/\\/+$/, '')` performance of this function can exponentially degrade when `f` contains many `/` characters resulting in ReDoS. \r\n\r\nThis vulnerability is not likely to be exploitable as it requires that the untrusted input is being passed into the `tar.extract()` or `tar.list()` array of entries to parse/extract, which would be unusual.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `tar` to version 6.1.4, 5.0.8, 4.4.16 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/06cbde5935aa7643f578f874de84a7da2a74fe3a)\n- [GitHub Commit](https://github.com/npm/node-tar/commit/adf35115dbc6e7a479fe3c38f859baf6ffff7a7a)\n- [GitHub Commit](https://github.com/npm/node-tar/commit/d3d5a4e4560f18131e64fc62f5a281b238ef2ecf)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-08-05T12:41:27.304655Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-08-05T12:38:55Z",
        "packageManager": "npm",
        "publicationTime": "2021-08-05T14:33:10Z",
        "modificationTime": "2021-08-11T16:47:34.347918Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.8"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.16"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "tar",
        "version": "4.4.8",
        "severityWithCritical": "low"
      },
      {
        "id": "SNYK-JS-TAR-1579147",
        "title": "Arbitrary File Write",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
        "credit": [
          "ginkoid",
          "chen-robert"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.1.7",
            ">=5.0.0 <5.0.8",
            "<4.4.16"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.1.7",
          "5.0.8",
          "4.4.16"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/53602669f58ddbeb3294d7196b3320aaaed22728",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 8.6,
            "modificationTime": "2022-04-26T01:10:35.689720Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-05-03T21:17:39.668619Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-09-13T21:08:20.388255Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic was insufficient when extracting `tar` files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators. However, `\\` is a valid filename character on posix systems.\r\n\r\nBy first creating a directory, and then replacing that directory with a symlink, it is possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted `tar` file to symlink into an arbitrary location. This can lead to extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\r\n\r\nAdditionally, a similar confusion could arise on case-insensitive filesystems. If a `tar` archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but not from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created.\n## Remediation\nUpgrade `tar` to version 6.1.7, 5.0.8, 4.4.16 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/53602669f58ddbeb3294d7196b3320aaaed22728)\n",
        "epssDetails": {
          "percentile": "0.43105",
          "probability": "0.00110",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-37701"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1779"
          ],
          "GHSA": [
            "GHSA-9r2w-394v-53qc"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-09-01T05:55:13.724747Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-01T05:45:02Z",
        "packageManager": "npm",
        "publicationTime": "2021-09-01T07:55:13.009873Z",
        "modificationTime": "2022-09-13T21:08:20.388255Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.8"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.16"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "tar",
        "version": "4.4.8",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-TAR-1579152",
        "title": "Arbitrary File Write",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
        "credit": [
          "ginkoid",
          "chen-robert",
          "JarLob"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.1.9",
            ">=5.0.0 <5.0.10",
            "<4.4.18"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.1.9",
          "5.0.10",
          "4.4.18"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 8.6,
            "modificationTime": "2022-04-26T01:10:35.782070Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-05-03T21:18:09.683772Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
            "cvssV3BaseScore": 8.1,
            "modificationTime": "2022-09-13T18:47:58.237883Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\r\n\r\nThis logic is insufficient when extracting `tar` files that contain two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts.\r\nA specially crafted `tar` archive can include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. This leads to bypassing `node-tar` symlink checks on directories, essentially allowing an untrusted `tar` file to symlink into an arbitrary location and extracting arbitrary files into that location.\n## Remediation\nUpgrade `tar` to version 6.1.9, 5.0.10, 4.4.18 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455)\n",
        "epssDetails": {
          "percentile": "0.43105",
          "probability": "0.00110",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-37712"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1780"
          ],
          "GHSA": [
            "GHSA-qq89-hq3f-393p"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-09-01T06:04:41.432860Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-01T05:57:49Z",
        "packageManager": "npm",
        "publicationTime": "2021-09-01T07:55:12.359155Z",
        "modificationTime": "2022-09-13T18:47:58.237883Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.8"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.18"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "tar",
        "version": "4.4.8",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-TAR-1579155",
        "title": "Arbitrary File Write",
        "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
        "credit": [
          "ginkoid",
          "chen-robert",
          "JarLob"
        ],
        "semver": {
          "vulnerable": [
            ">=6.0.0 <6.1.9",
            ">=5.0.0 <5.0.10",
            "<4.4.18"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "6.1.9",
          "5.0.10",
          "4.4.18"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": "This vulnerability is only applicable on Windows operating system"
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "tar",
        "references": [
          {
            "url": "https://github.com/npm/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
            "cvssV3BaseScore": 8.2,
            "modificationTime": "2022-05-03T21:18:12.740276Z"
          },
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
            "cvssV3BaseScore": 8.6,
            "modificationTime": "2022-04-26T01:10:36.631320Z"
          }
        ],
        "description": "## Overview\n[tar](https://www.npmjs.com/package/tar) is a full-featured Tar for Node.js.\n\nAffected versions of this package are vulnerable to Arbitrary File Write. `node-tar` aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\r\n\r\nThis logic is insufficient on Windows systems when extracting `tar` files that contain a path that is not an absolute path, but specify a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` resolves against the current working directory on the `C:` drive, rather than the extraction target directory.\r\n\r\nAdditionally, a `..` portion of the path can occur immediately after the drive letter, such as `C:../foo`, and is not properly sanitized by the logic that checks for `..` within the normalized and split portions of the path.\r\n\r\n**Note:** This only affects users of `node-tar` on Windows systems.\n## Remediation\nUpgrade `tar` to version 6.1.9, 5.0.10, 4.4.18 or higher.\n## References\n- [GitHub Commit](https://github.com/npm/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598)\n",
        "epssDetails": {
          "percentile": "0.23142",
          "probability": "0.00059",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-37713"
          ],
          "CWE": [
            "CWE-22"
          ],
          "NSP": [
            "1781"
          ],
          "GHSA": [
            "GHSA-5955-9wpr-37jh"
          ]
        },
        "packageName": "tar",
        "proprietary": false,
        "creationTime": "2021-09-01T06:09:32.775270Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-01T06:05:10Z",
        "packageManager": "npm",
        "publicationTime": "2021-09-01T07:55:11.707292Z",
        "modificationTime": "2022-06-23T09:38:04.790680Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.8"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "fsevents@1.2.9",
          "node-pre-gyp@0.12.0",
          "tar@4.4.18"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "tar",
        "version": "4.4.8",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-UGLIFYJS-1727251",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "credit": [
          "ready-research"
        ],
        "semver": {
          "vulnerable": [
            "<3.14.3"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.14.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 5.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "uglify-js",
        "references": [
          {
            "url": "https://github.com/mishoo/UglifyJS/commit/157521066fc43cff2feab7ffc1ecea603617606b",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/mishoo/UglifyJS/issues/5133",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/mishoo/UglifyJS/pull/5134",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/mishoo/UglifyJS/pull/5135",
            "title": "GitHub PR"
          }
        ],
        "cvssDetails": [],
        "description": "## Overview\n[uglify-js](http://npmjs.com/package/uglify-js) is a JavaScript parser, minifier, compressor and beautifier toolkit.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the `string_template` and the `decode_template` functions.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `uglify-js` to version 3.14.3 or higher.\n## References\n- [GitHub Commit](https://github.com/mishoo/UglifyJS/commit/157521066fc43cff2feab7ffc1ecea603617606b)\n- [GitHub Issue](https://github.com/mishoo/UglifyJS/issues/5133)\n- [GitHub PR](https://github.com/mishoo/UglifyJS/pull/5134)\n- [GitHub PR](https://github.com/mishoo/UglifyJS/pull/5135)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-1333"
          ]
        },
        "packageName": "uglify-js",
        "proprietary": false,
        "creationTime": "2021-09-30T14:25:50.130236Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-09-30T14:22:21Z",
        "packageManager": "npm",
        "publicationTime": "2021-11-09T18:42:15.313328Z",
        "modificationTime": "2021-11-09T18:42:15.332622Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "jade@1.11.0",
          "uglify-js@2.8.29"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "uglify-js",
        "version": "2.8.29",
        "severityWithCritical": "medium"
      },
      {
        "id": "npm:uglify-js:20150824",
        "title": "Improper minification of non-boolean comparisons",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L",
        "credit": [
          "Tom MacWright"
        ],
        "semver": {
          "vulnerable": [
            ">=2.2.0 <2.4.24"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.4.24"
        ],
        "patches": [
          {
            "id": "patch:npm:uglify-js:20150824:0",
            "urls": [
              "https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20150824/uglify-js_20150824_0_0_905b6011784ca60d41919ac1a499962b7c1d4b02_snyk.patch"
            ],
            "version": "<= 2.4.23 >2.0.0",
            "comments": [],
            "modificationTime": "2019-12-03T11:40:45.756528Z"
          }
        ],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 8.3,
        "functions": [
          {
            "version": [
              ">=2.2.0 <2.4.24"
            ],
            "functionId": {
              "filePath": "lib/compress.js",
              "className": null,
              "functionName": "Compressor"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "uglify-js",
        "references": [
          {
            "url": "https://zyan.scripts.mit.edu/blog/backdooring-js/",
            "title": "Blog Post"
          },
          {
            "url": "https://github.com/mishoo/UglifyJS2/issues/751",
            "title": "GitHub Issue"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "critical",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvssV3BaseScore": 9.8,
            "modificationTime": "2022-01-03T17:48:01.009006Z"
          }
        ],
        "description": "## Overview\r\n[`uglify-js`](http://npmjs.com/package/uglify-js) is a JavaScript parser, minifier, compressor and beautifier toolkit.\r\n\r\n[Tom MacWright](https://github.com/mishoo/UglifyJS2/issues/751) discovered that UglifyJS versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted Javascript file to have altered functionality after minification. This bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [Yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\r\n\r\n### Details\r\nIn Boolean algebra, DeMorgan's laws describe the relationships between conjunctions (`&&`), disjunctions (`||`) and negations (`!`).\r\nIn Javascript form, they state that:\r\n```savascript\r\n !(a && b) === (!a) || (!b)\r\n !(a || b) === (!a) && (!b)\r\n```\r\n\r\nThe law does not hold true when one of the values is not a boolean however.\r\n\r\nVulnerable versions of UglifyJS do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\r\n\r\nConsider this authentication function:\r\n\r\n```javascript\r\nfunction isTokenValid(user) {\r\n    var timeLeft =\r\n        !!config && // config object exists\r\n        !!user.token && // user object has a token\r\n        !user.token.invalidated && // token is not explicitly invalidated\r\n        !config.uninitialized && // config is initialized\r\n        !config.ignoreTimestamps && // don't ignore timestamps\r\n        getTimeLeft(user.token.expiry); // > 0 if expiration is in the future\r\n\r\n    // The token must not be expired\r\n    return timeLeft > 0;\r\n}\r\n\r\nfunction getTimeLeft(expiry) {\r\n  return expiry - getSystemTime();\r\n}\r\n```\r\nWhen minified with a vulnerable version of UglifyJS, it will produce the following insecure output, where a token will never expire:\r\n\r\n( Formatted for readability )\r\n\r\n```javascript\r\nfunction isTokenValid(user) {\r\n    var timeLeft = !(                       // negation\r\n        !config                             // config object does not exist\r\n        || !user.token                      // user object does not have a token\r\n        || user.token.invalidated           // token is explicitly invalidated\r\n        || config.uninitialized             // config isn't initialized\r\n        || config.ignoreTimestamps          // ignore timestamps\r\n        || !getTimeLeft(user.token.expiry)  // > 0 if expiration is in the future\r\n    );\r\n    return timeLeft > 0\r\n}\r\n\r\nfunction getTimeLeft(expiry) {\r\n    return expiry - getSystemTime()\r\n}\r\n```\r\n\r\n## Remediation\r\nUpgrade UglifyJS to version `2.4.24` or higher.\r\n\r\n## References\r\n- [Blog Post](https://zyan.scripts.mit.edu/blog/backdooring-js/)\r\n- [GitHub Issue](https://github.com/mishoo/UglifyJS2/issues/751)",
        "epssDetails": {
          "percentile": "0.79197",
          "probability": "0.00794",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-8857"
          ],
          "CWE": [
            "CWE-95"
          ],
          "NSP": [
            "39"
          ],
          "GHSA": [
            "GHSA-34r7-q49f-h37c"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-UGLIFYJS-10041"
          ]
        },
        "packageName": "uglify-js",
        "proprietary": false,
        "creationTime": "2015-08-24T09:29:10Z",
        "functions_new": [
          {
            "version": [
              ">=2.2.0 <2.4.24"
            ],
            "functionId": {
              "filePath": "lib/compress.js",
              "functionName": "Compressor"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-UGLIFYJS-10041"
        ],
        "disclosureTime": "2015-08-24T09:29:10Z",
        "packageManager": "npm",
        "publicationTime": "2015-08-24T09:29:10Z",
        "modificationTime": "2022-01-03T17:48:01.009006Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "jade@1.11.0",
          "transformers@2.1.0",
          "uglify-js@2.2.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": true,
        "isPinnable": false,
        "isRuntime": false,
        "name": "uglify-js",
        "version": "2.2.5",
        "severityWithCritical": "high"
      },
      {
        "id": "SNYK-JS-UNDEFSAFE-548940",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:C",
        "credit": [
          "JHU System Security Lab"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.3"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.3"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "medium",
        "cvssScore": 6.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "undefsafe",
        "references": [
          {
            "url": "https://github.com/remy/undefsafe/commit/f272681b3a50e2c4cbb6a8533795e1453382c822",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "medium",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 6.3,
            "modificationTime": "2022-01-03T17:53:47.278789Z"
          }
        ],
        "description": "## Overview\n[undefsafe](https://www.npmjs.com/package/undefsafe) is a Simple function for retrieving deep object properties without getting \"Cannot read property 'X' of undefined\".\n\nAffected versions of this package are vulnerable to Prototype Pollution. The `a` function could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.\r\n\r\n### PoC by JHU System Security Lab\r\n```js\r\nvar a = require(\"undefsafe\");\r\nvar payload = \"__proto__.toString\";\r\na({},payload,\"JHU\");\r\nconsole.log({}.toString);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `undefsafe` to version 2.0.3 or higher.\n## References\n- [GitHub Commit](https://github.com/remy/undefsafe/commit/f272681b3a50e2c4cbb6a8533795e1453382c822)\n",
        "epssDetails": {
          "percentile": "0.30357",
          "probability": "0.00074",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2019-10795"
          ],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "undefsafe",
        "proprietary": true,
        "creationTime": "2020-02-18T08:53:40.650407Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2020-02-18T08:51:08Z",
        "packageManager": "npm",
        "publicationTime": "2020-02-18T11:01:36Z",
        "modificationTime": "2022-08-25T12:14:40.896090Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "undefsafe@2.0.2"
        ],
        "upgradePath": [
          false,
          "nodemon@1.19.4",
          "undefsafe@2.0.3"
        ],
        "isUpgradable": true,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "undefsafe",
        "version": "2.0.2",
        "severityWithCritical": "medium"
      },
      {
        "id": "SNYK-JS-UNSETVALUE-2400660",
        "title": "Prototype Pollution",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "credit": [
          "khizar"
        ],
        "semver": {
          "vulnerable": [
            "<2.0.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "2.0.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "unset-value",
        "references": [
          {
            "url": "https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561",
            "title": "GitHub Commit"
          },
          {
            "url": "https://github.com/jonschlinkert/unset-value/issues/11",
            "title": "GitHub Issue"
          },
          {
            "url": "https://github.com/jonschlinkert/unset-value/pull/12",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/jonschlinkert/unset-value/releases",
            "title": "GitHub Release"
          }
        ],
        "cvssDetails": [],
        "description": "## Overview\n\nAffected versions of this package are vulnerable to Prototype Pollution via the `unset` function in `index.js`, because it allows access to object prototype properties.\n\n## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `__proto__`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n    \n-   Property definition by path\n    \n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>  \n\nWhen the source object contains a property named `__proto__` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of “path”, they can set this value to `__proto__.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n    \n-   Web server\n\n-   Web browser\n    \n\n## How to prevent\n\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\n    \n2.  Require schema validation of JSON input.\n    \n3.  Avoid using unsafe recursive merge functions.\n    \n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n    \n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\nUpgrade `unset-value` to version 2.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jonschlinkert/unset-value/pull/12/commits/abb534769f6ea62c3dd988f5ce0a4ebd1f91b561)\n- [GitHub Issue](https://github.com/jonschlinkert/unset-value/issues/11)\n- [GitHub PR](https://github.com/jonschlinkert/unset-value/pull/12)\n- [GitHub Release](https://github.com/jonschlinkert/unset-value/releases)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-1321"
          ]
        },
        "packageName": "unset-value",
        "proprietary": false,
        "creationTime": "2022-02-13T14:46:07.185334Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2022-02-13T14:44:04Z",
        "packageManager": "npm",
        "publicationTime": "2022-02-13T15:26:38.063549Z",
        "modificationTime": "2022-02-13T15:26:38.065734Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "nodemon@1.19.4",
          "chokidar@2.1.8",
          "readdirp@2.2.1",
          "micromatch@3.1.10",
          "extglob@2.0.4",
          "expand-brackets@2.1.4",
          "snapdragon@0.8.2",
          "base@0.11.2",
          "cache-base@1.0.1",
          "unset-value@1.0.0"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "unset-value",
        "version": "1.0.0",
        "severityWithCritical": "high"
      },
      {
        "id": "npm:clean-css:20180306",
        "title": "Regular Expression Denial of Service (ReDoS)",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P/RL:O/RC:C",
        "credit": [
          "Jamie Davis"
        ],
        "semver": {
          "vulnerable": [
            "<4.1.11"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "4.1.11"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              "<4.1.11"
            ],
            "functionId": {
              "filePath": "lib/optimizer/validator.js",
              "className": null,
              "functionName": "validator"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "clean-css",
        "references": [
          {
            "url": "https://github.com/jakubpawlowicz/clean-css/commit/2929bafbf8cdf7dccb24e0949c70833764fa87e3",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "description": "## Overview\n\n[clean-css](https://www.npmjs.com/package/clean-css) is a fast and efficient CSS optimizer for Node.js platform and any modern browser.\n\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).\nattacks. This can cause an impact of about 10 seconds matching time for data 70k characters long.\n\n## Disclosure Timeline\n* Feb 15th, 2018 - Initial Disclosure to package owner\n* Feb 20th, 2018 - Initial Response from package owner\n* Mar 6th, 2018 - Fix issued\n* Mar 7th, 2018 - Vulnerability published\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\r\n\r\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\r\n\r\nLet’s take the following regular expression as an example:\r\n```js\r\nregex = /A(B|C+)+D/\r\n```\r\n\r\nThis regular expression accomplishes the following:\r\n- `A` The string must start with the letter 'A'\r\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\r\n- `D` Finally, we ensure this section of the string ends with a 'D'\r\n\r\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\r\n\r\nIt most cases, it doesn't take very long for a regex engine to find a match:\r\n\r\n```bash\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\r\n0.04s user 0.01s system 95% cpu 0.052 total\r\n\r\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\r\n1.79s user 0.02s system 99% cpu 1.812 total\r\n```\r\n\r\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\r\n\r\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\r\n\r\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\r\n1. CCC\r\n2. CC+C\r\n3. C+CC\r\n4. C+C+C.\r\n\r\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\r\n\r\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\r\n\r\n| String | Number of C's | Number of steps |\r\n| -------|-------------:| -----:|\r\n| ACCCX | 3 | 38\r\n| ACCCCX | 4 | 71\r\n| ACCCCCX | 5 | 136\r\n| ACCCCCCCCCCCCCCX | 14 | 65,553\r\n\r\n\r\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\n\nUpgrade `clean-css` to version 4.1.11 or higher.\n\n\n## References\n\n- [GitHub Advisory](https://github.com/advisories/GHSA-wxhq-pm8v-cw75)\n\n- [GitHub Commit](https://github.com/jakubpawlowicz/clean-css/commit/2929bafbf8cdf7dccb24e0949c70833764fa87e3)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-400",
            "CWE-185"
          ],
          "NSP": [
            "785"
          ],
          "GHSA": [
            "GHSA-wxhq-pm8v-cw75"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-CLEANCSS-11052"
          ]
        },
        "packageName": "clean-css",
        "proprietary": true,
        "creationTime": "2018-03-07T11:56:23.869000Z",
        "functions_new": [
          {
            "version": [
              "<4.1.11"
            ],
            "functionId": {
              "filePath": "lib/optimizer/validator.js",
              "functionName": "validator"
            }
          }
        ],
        "alternativeIds": [
          "SNYK-JS-CLEANCSS-11052"
        ],
        "disclosureTime": "2018-03-06T11:56:23Z",
        "packageManager": "npm",
        "publicationTime": "2018-03-07T11:51:05Z",
        "modificationTime": "2022-03-09T10:46:33.100563Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "jade@1.11.0",
          "clean-css@3.4.28"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "clean-css",
        "version": "3.4.28",
        "severityWithCritical": "low"
      },
      {
        "id": "npm:constantinople:20180421",
        "title": "Sandbox Bypass",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N",
        "credit": [
          "Mike Samuel"
        ],
        "semver": {
          "vulnerable": [
            "<3.1.1"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "3.1.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "js",
        "severity": "critical",
        "cvssScore": 10,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "constantinople",
        "references": [
          {
            "url": "https://github.com/pugjs/constantinople/commit/01d409c0d081dfd65223e6b7767c244156d35f7f",
            "title": "GitHub Commit"
          }
        ],
        "cvssDetails": [],
        "description": "## Overview\n[constantinople](https://github.com/ForbesLindesay/constantinople) is a Determine whether a JavaScript expression evaluates to a constant (using acorn)\n\nAffected versions of this package are vulnerable to Sandbox Bypass which can lead to arbitrary code execution.\n## Remediation\nUpgrade `constantinople` to version 3.1.1 or higher.\n## References\n- [GitHub Commit](https://github.com/pugjs/constantinople/commit/01d409c0d081dfd65223e6b7767c244156d35f7f)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-264"
          ],
          "NSP": [
            "568"
          ],
          "GHSA": [
            "GHSA-4vmm-mhcq-4x9j"
          ],
          "ALTERNATIVE": [
            "SNYK-JS-CONSTANTINOPLE-12136"
          ]
        },
        "packageName": "constantinople",
        "proprietary": false,
        "creationTime": "2018-03-02T16:46:56.854000Z",
        "functions_new": [],
        "alternativeIds": [
          "SNYK-JS-CONSTANTINOPLE-12136"
        ],
        "disclosureTime": "2018-04-21T04:33:52Z",
        "packageManager": "npm",
        "publicationTime": "2018-05-09T16:11:26Z",
        "modificationTime": "2021-08-17T13:38:09.956106Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "nodetest2@0.0.0",
          "jade@1.11.0",
          "constantinople@3.0.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "constantinople",
        "version": "3.0.2",
        "severityWithCritical": "critical"
      }
    ],
    "upgrade": {
      "express@4.16.3": {
        "upgradeTo": "express@4.17.3",
        "upgrades": [
          "qs@6.5.1"
        ],
        "vulns": [
          "SNYK-JS-QS-3153490"
        ]
      },
      "mongodb@3.0.5": {
        "upgradeTo": "mongodb@3.1.13",
        "upgrades": [
          "mongodb@3.0.5",
          "bson@1.0.6"
        ],
        "vulns": [
          "SNYK-JS-MONGODB-473855",
          "SNYK-JS-BSON-561052"
        ]
      },
      "monk@6.0.5": {
        "upgradeTo": "monk@7.0.0",
        "upgrades": [
          "bson@1.0.6",
          "mongodb@2.2.35"
        ],
        "vulns": [
          "SNYK-JS-BSON-561052",
          "SNYK-JS-MONGODB-473855"
        ]
      },
      "morgan@1.9.0": {
        "upgradeTo": "morgan@1.9.1",
        "upgrades": [
          "morgan@1.9.0"
        ],
        "vulns": [
          "SNYK-JS-MORGAN-72579"
        ]
      },
      "nodemon@1.19.4": {
        "upgradeTo": "nodemon@2.0.17",
        "upgrades": [
          "got@6.7.1",
          "glob-parent@3.1.0"
        ],
        "vulns": [
          "SNYK-JS-GOT-2932019",
          "SNYK-JS-GLOBPARENT-1016905"
        ]
      }
    },
    "patch": {
      "npm:uglify-js:20151024": {
        "paths": [
          {
            "jade > transformers > uglify-js": {
              "patched": "2023-11-03T06:26:09.122Z"
            }
          }
        ]
      }
    },
    "ignore": {},
    "pin": {}
  },
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 29,
  "projectName": "nodetest2",
  "displayTargetFile": "Vulnerable-nodejs-master/package-lock.json",
  "hasUnknownVersions": false,
  "path": "/home/srish/.nodejsscan/aceb212b882482b60842c363ff3ed5e61025d5a71c445bf4066859a29bfb52b6"
}
